{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/CreateUserForm.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Container, Box, TextField, InputAdornment, FormControlLabel, Checkbox, Button, CssBaseline } from \"@material-ui/core\";\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { Post } from \"./../apis/api-controller\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport default function AddUserForm() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.InputFields,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: firstname,\n            onInput: e => setFirstNameInput(e.target.value),\n            label: \"First Name\",\n            variant: \"outlined\",\n            className: classes.InputFieldsText,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: lastname,\n            onInput: e => setSecondNameInput(e.target.value),\n            label: \"Last Name\",\n            variant: \"outlined\",\n            className: classes.InputFieldsText,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: username,\n            onInput: e => setUserNameInput(e.target.value),\n            label: \"UserName\",\n            variant: \"outlined\",\n            className: classes.InputFieldsText,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: email,\n            onInput: e => setEmailInput(e.target.value),\n            label: \"Email\",\n            variant: \"outlined\",\n            className: classes.InputFieldsText,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: password,\n            onInput: e => setPasswordInput(e.target.value),\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            className: classes.InputFieldsText,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: checkBoxValue,\n            onChange: e => {\n              setCheckBoxInput(e.target.checked);\n            },\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: green['A700'],\n              className: classes.CheckboxControler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 38\n            }, this),\n            label: \"I agree to the terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !checkBoxValue,\n            onClick: () => submitOnClick(),\n            variant: \"contained\",\n            className: classes.Button,\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = AddUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/CreateUserForm.js"],"names":["React","useState","Container","Box","TextField","InputAdornment","FormControlLabel","Checkbox","Button","CssBaseline","HashRouter","Router","Route","NavLink","Post","makeStyles","Typography","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor","AddUserForm","classes","firstname","e","setFirstNameInput","target","value","startAdornment","lastname","setSecondNameInput","username","setUserNameInput","email","setEmailInput","password","setPasswordInput","checkBoxValue","setCheckBoxInput","checked","submitOnClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Container,\n    Box,\n    TextField,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    CssBaseline\n} from \"@material-ui/core\";\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport {Post} from \"./../apis/api-controller\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst useStyle = makeStyles((them) => ({\n    Container: {\n        padding: `${them.spacing(4)}px 0px`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        maxHeight: 600\n    },\n    InputFields: {\n        marginTop: them.spacing(8),\n        marginBottom: them.spacing(8),\n        width: \"100%\",\n    },\n    InputFieldsText: {\n        marginBottom: them.spacing(4),\n        maxWidth: 600,\n        display: 'block',\n        color: `${green[700]} !important`,\n        '&:hover': {\n            color: green[700],\n        },\n        '&:active': {\n            color: green[700],\n            borderColor: green[700],\n        }\n    },\n    CheckboxControler: {\n        color: green[700],\n    },\n    Button: {\n        display: 'block',\n        color: 'white',\n        backgroundColor: green[700],\n        '&:hover': {\n            backgroundColor: green[900],\n        }\n    }\n}));\n\nexport default function AddUserForm() {\n\n    return (\n        <>\n            <CssBaseline />\n            <Container>\n                <Container maxWidth=\"md\">\n                    <Box className={classes.InputFields}>\n                        <TextField\n                            value={firstname}\n                            onInput={e => setFirstNameInput(e.target.value)}\n                            label=\"First Name\"\n                            variant=\"outlined\"\n                            className={classes.InputFieldsText}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircleIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            value={lastname}\n                            onInput={e => setSecondNameInput(e.target.value)}\n                            label=\"Last Name\"\n                            variant=\"outlined\"\n                            className={classes.InputFieldsText}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircleIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            value={username}\n                            onInput={e => setUserNameInput(e.target.value)}\n                            label=\"UserName\"\n                            variant=\"outlined\"\n                            className={classes.InputFieldsText}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircleIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            value={email}\n                            onInput={e => setEmailInput(e.target.value)}\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            className={classes.InputFieldsText}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AlternateEmailIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            value={password}\n                            onInput={e => setPasswordInput(e.target.value)}\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            type='password'\n                            className={classes.InputFieldsText}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockOpenIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                            fullWidth={true}\n                        />\n                        <FormControlLabel\n                            value = {checkBoxValue} \n                            onChange={e =>  {\n                                setCheckBoxInput(e.target.checked)\n                            }}\n                            control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n                            label=\"I agree to the terms and conditions\"\n                        />\n                        <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n                    </Box>\n                </Container>\n                </Container>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}