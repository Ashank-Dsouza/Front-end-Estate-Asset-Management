{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserFormFields.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport default function AddUserFormFields() {\n  _s();\n\n  const classes = useStyle();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: firstname,\n      onInput: e => setFirstNameInput(e.target.value),\n      label: \"First Name\",\n      variant: \"outlined\",\n      className: classes.InputFieldsText,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: lastname,\n      onInput: e => setSecondNameInput(e.target.value),\n      label: \"Last Name\",\n      variant: \"outlined\",\n      className: classes.InputFieldsText,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: username,\n      onInput: e => setUserNameInput(e.target.value),\n      label: \"UserName\",\n      variant: \"outlined\",\n      className: classes.InputFieldsText,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: email,\n      onInput: e => setEmailInput(e.target.value),\n      label: \"Email\",\n      variant: \"outlined\",\n      className: classes.InputFieldsText,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: password,\n      onInput: e => setPasswordInput(e.target.value),\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      className: classes.InputFieldsText,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)\n      },\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddUserFormFields, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = AddUserFormFields;\nAddUserForm.propTypes = {\n  ShowAgreementCheckbox: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserFormFields\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserFormFields.js"],"names":["React","TextField","InputAdornment","PropTypes","makeStyles","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","Container","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","Button","backgroundColor","AddUserFormFields","classes","firstname","e","setFirstNameInput","target","value","startAdornment","lastname","setSecondNameInput","username","setUserNameInput","email","setEmailInput","password","setPasswordInput","AddUserForm","propTypes","ShowAgreementCheckbox","bool","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    TextField,\n    InputAdornment\n} from \"@material-ui/core\";\nimport PropTypes from 'prop-types'; \n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst useStyle = makeStyles((them) => ({\n    Container: {\n        padding: `${them.spacing(4)}px 0px`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        maxHeight: 600\n    },\n    InputFields: {\n        marginTop: them.spacing(8),\n        marginBottom: them.spacing(8),\n        width: \"100%\",\n    },\n    InputFieldsText: {\n        marginBottom: them.spacing(4),\n        maxWidth: 600,\n        display: 'block',\n        color: `${green[700]} !important`,\n        '&:hover': {\n            color: green[700],\n        },\n        '&:active': {\n            color: green[700],\n            borderColor: green[700],\n        }\n    },\n    CheckboxControler: {\n        color: green[700],\n    },\n    Button: {\n        display: 'block',\n        color: 'white',\n        backgroundColor: green[700],\n        '&:hover': {\n            backgroundColor: green[900],\n        }\n    }\n}));\n\nexport default function AddUserFormFields() {\n    const classes = useStyle();\n\n\n    return (\n        \n        <>\n\n            <TextField\n                value={firstname}\n                onInput={e => setFirstNameInput(e.target.value)}\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={lastname}\n                onInput={e => setSecondNameInput(e.target.value)}\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={username}\n                onInput={e => setUserNameInput(e.target.value)}\n                label=\"UserName\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={email}\n                onInput={e => setEmailInput(e.target.value)}\n                label=\"Email\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AlternateEmailIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={password}\n                onInput={e => setPasswordInput(e.target.value)}\n                label=\"Password\"\n                variant=\"outlined\"\n                type='password'\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <LockOpenIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />            \n        </>\n    );\n}\n\nAddUserForm.propTypes = {\n    ShowAgreementCheckbox: PropTypes.bool.isRequired\n  };\n"]},"metadata":{},"sourceType":"module"}