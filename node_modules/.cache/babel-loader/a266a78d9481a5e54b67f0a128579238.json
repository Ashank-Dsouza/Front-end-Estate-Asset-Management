{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Container, Box, TextField, InputAdornment, FormControlLabel, Checkbox, Button, CssBaseline } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { Post } from \"../../apis/api-controller\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport AddUserFormFields from \"./AddUserFormFields\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport default function AddUserForm(props) {\n  _s();\n\n  const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n  const [username, setUserNameInput] = useState(''); // '' is the initial state value\n\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n  const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n\n  const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n  const [checkBoxValue, setCheckBoxInput] = useState(false);\n  const classes = useStyle();\n\n  const preventDefault = event => {\n    event.preventDefault();\n  };\n\n  const submitOnClick = async event => {\n    console.log(\"the submitOnClick\");\n    console.log(\"the value of checkbox input is: \", checkBoxValue);\n    console.log(\"the value of firstname input is: \", firstname);\n    console.log(\"the value of lastname input is: \", lastname);\n    console.log(\"the value of password input is: \", password);\n    console.log(\"the value of email input is: \", email);\n    console.log(\"the value of username input is: \", username);\n    var response = await Post('/signup', {\n      FirstName: firstname,\n      LastName: lastname,\n      UserName: username,\n      Email: email,\n      Password: password\n    });\n  }; // const { ShowAgreementCheckbox } = props;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.InputFields,\n      children: [/*#__PURE__*/_jsxDEV(AddUserFormFields, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: checkBoxValue,\n        onChange: e => {\n          setCheckBoxInput(e.target.checked);\n        },\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: green['A700'],\n          className: classes.CheckboxControler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 26\n        }, this),\n        label: \"I agree to the terms and conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !checkBoxValue,\n        onClick: () => submitOnClick(),\n        variant: \"contained\",\n        className: classes.Button,\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddUserForm, \"Xp8ASqLIjbQIs1pvJ08VTg5j8Cw=\", false, function () {\n  return [useStyle];\n});\n\n_c = AddUserForm;\nAddUserForm.propTypes = {\n  ShowAgreementCheckbox: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js"],"names":["React","useState","Container","Box","TextField","InputAdornment","FormControlLabel","Checkbox","Button","CssBaseline","PropTypes","HashRouter","Router","Route","NavLink","Post","makeStyles","Typography","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","AddUserFormFields","useStyle","them","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor","AddUserForm","props","password","setPasswordInput","username","setUserNameInput","email","setEmailInput","firstname","setFirstNameInput","lastname","setSecondNameInput","checkBoxValue","setCheckBoxInput","classes","preventDefault","event","submitOnClick","console","log","response","FirstName","LastName","UserName","Email","Password","e","target","checked","propTypes","ShowAgreementCheckbox","bool","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Container,\n    Box,\n    TextField,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    CssBaseline\n} from \"@material-ui/core\";\nimport PropTypes from 'prop-types'; \nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { Post } from \"../../apis/api-controller\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport AddUserFormFields from \"./AddUserFormFields\";\n\nconst useStyle = makeStyles((them) => ({\n    Container: {\n        padding: `${them.spacing(4)}px 0px`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        maxHeight: 600\n    },\n    InputFields: {\n        marginTop: them.spacing(8),\n        marginBottom: them.spacing(8),\n        width: \"100%\",\n    },\n    InputFieldsText: {\n        marginBottom: them.spacing(4),\n        maxWidth: 600,\n        display: 'block',\n        color: `${green[700]} !important`,\n        '&:hover': {\n            color: green[700],\n        },\n        '&:active': {\n            color: green[700],\n            borderColor: green[700],\n        }\n    },\n    CheckboxControler: {\n        color: green[700],\n    },\n    Button: {\n        display: 'block',\n        color: 'white',\n        backgroundColor: green[700],\n        '&:hover': {\n            backgroundColor: green[900],\n        }\n    }\n}));\n\nexport default function AddUserForm(props) {\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n    const [checkBoxValue, setCheckBoxInput] = useState(false);\n\n    const classes = useStyle();\n\n    const preventDefault = (event) => {\n        event.preventDefault();\n    };\n\n    const submitOnClick = async (event) => {\n        console.log(\"the submitOnClick\");\n        console.log(\"the value of checkbox input is: \", checkBoxValue);\n        console.log(\"the value of firstname input is: \", firstname);\n        console.log(\"the value of lastname input is: \", lastname);\n        console.log(\"the value of password input is: \", password);\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of username input is: \", username);\n\n        var response = await Post('/signup', {\n            FirstName: firstname,\n            LastName: lastname,\n            UserName: username,\n            Email: email,\n            Password: password\n        });\n\n    }\n    // const { ShowAgreementCheckbox } = props;\n\n\n    return (\n        \n        <>\n        <Box className={classes.InputFields}>\n\n        <AddUserFormFields/>\n                <FormControlLabel\n                value={checkBoxValue}\n                onChange={e => {\n                    setCheckBoxInput(e.target.checked)\n                }}\n                control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n                label=\"I agree to the terms and conditions\"\n            />\n\n            \n            <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n        </Box> \n        </>\n    );\n}\n\nAddUserForm.propTypes = {\n    ShowAgreementCheckbox: PropTypes.bool.isRequired\n  };\n"]},"metadata":{},"sourceType":"module"}