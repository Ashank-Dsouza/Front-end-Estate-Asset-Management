{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Box, TextField, InputAdornment, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\nimport { Post } from \"../../apis/api-controller\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport default function AddUserForm(props) {\n  _s();\n\n  const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n  const [username, setUserNameInput] = useState(''); // '' is the initial state value\n\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n  const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n\n  const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n  const [checkBoxValue, setCheckBoxInput] = useState(false);\n  const classes = useStyle();\n\n  const preventDefault = event => {\n    event.preventDefault();\n  };\n\n  const submitOnClick = async event => {\n    console.log(\"the submitOnClick\");\n    console.log(\"the value of checkbox input is: \", checkBoxValue);\n    console.log(\"the value of firstname input is: \", firstname);\n    console.log(\"the value of lastname input is: \", lastname);\n    console.log(\"the value of password input is: \", password);\n    console.log(\"the value of email input is: \", email);\n    console.log(\"the value of username input is: \", username);\n    var body = {\n      FirstName: firstname,\n      LastName: lastname,\n      UserName: username,\n      Email: email,\n      Password: password\n    };\n\n    if (props.ShowAgreementCheckbox) {\n      var response = await Post('/signup', body);\n    } else {\n      var response = await Post('/users', body);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.InputFields,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: firstname,\n        onInput: e => setFirstNameInput(e.target.value),\n        label: \"First Name\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: lastname,\n        onInput: e => setSecondNameInput(e.target.value),\n        label: \"Last Name\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: username,\n        onInput: e => setUserNameInput(e.target.value),\n        label: \"UserName\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: email,\n        onInput: e => setEmailInput(e.target.value),\n        label: \"Email\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: password,\n        onInput: e => setPasswordInput(e.target.value),\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), props.ShowAgreementCheckbox ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: checkBoxValue,\n          onChange: e => {\n            setCheckBoxInput(e.target.checked);\n          },\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: green['A700'],\n            className: classes.CheckboxControler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 42\n          }, this),\n          label: \"I agree to the terms and conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !checkBoxValue,\n          onClick: () => submitOnClick(),\n          variant: \"contained\",\n          className: classes.Button,\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => submitOnClick(),\n          variant: \"contained\",\n          className: classes.Button,\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddUserForm, \"Xp8ASqLIjbQIs1pvJ08VTg5j8Cw=\", false, function () {\n  return [useStyle];\n});\n\n_c = AddUserForm;\nAddUserForm.propTypes = {\n  ShowAgreementCheckbox: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js"],"names":["React","useState","Box","TextField","InputAdornment","FormControlLabel","Checkbox","Button","Post","PropTypes","makeStyles","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","Container","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor","AddUserForm","props","password","setPasswordInput","username","setUserNameInput","email","setEmailInput","firstname","setFirstNameInput","lastname","setSecondNameInput","checkBoxValue","setCheckBoxInput","classes","preventDefault","event","submitOnClick","console","log","body","FirstName","LastName","UserName","Email","Password","ShowAgreementCheckbox","response","e","target","value","startAdornment","checked","propTypes","bool","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Box,\n    TextField,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n} from \"@material-ui/core\";\nimport { Post } from \"../../apis/api-controller\";\nimport PropTypes from 'prop-types';\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst useStyle = makeStyles((them) => ({\n    Container: {\n        padding: `${them.spacing(4)}px 0px`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        maxHeight: 600\n    },\n    InputFields: {\n        marginTop: them.spacing(8),\n        marginBottom: them.spacing(8),\n        width: \"100%\",\n    },\n    InputFieldsText: {\n        marginBottom: them.spacing(4),\n        maxWidth: 600,\n        display: 'block',\n        color: `${green[700]} !important`,\n        '&:hover': {\n            color: green[700],\n        },\n        '&:active': {\n            color: green[700],\n            borderColor: green[700],\n        }\n    },\n    CheckboxControler: {\n        color: green[700],\n    },\n    Button: {\n        display: 'block',\n        color: 'white',\n        backgroundColor: green[700],\n        '&:hover': {\n            backgroundColor: green[900],\n        }\n    }\n}));\n\nexport default function AddUserForm(props) {\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n    const [checkBoxValue, setCheckBoxInput] = useState(false);\n\n    const classes = useStyle();\n\n    const preventDefault = (event) => {\n        event.preventDefault();\n    };\n\n    const submitOnClick = async (event) => {\n        console.log(\"the submitOnClick\");\n        console.log(\"the value of checkbox input is: \", checkBoxValue);\n        console.log(\"the value of firstname input is: \", firstname);\n        console.log(\"the value of lastname input is: \", lastname);\n        console.log(\"the value of password input is: \", password);\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of username input is: \", username);\n\n        var body = {\n            FirstName: firstname,\n            LastName: lastname,\n            UserName: username,\n            Email: email,\n            Password: password\n        }\n        if (props.ShowAgreementCheckbox) {\n            var response = await Post('/signup', body);\n        }\n        else {\n            var response = await Post('/users', body);\n        }\n\n    }\n\n    return (\n        <>\n            <Box className={classes.InputFields}>\n\n                <TextField\n                    value={firstname}\n                    onInput={e => setFirstNameInput(e.target.value)}\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    className={classes.InputFieldsText}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircleIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    fullWidth={true}\n                />\n                <TextField\n                    value={lastname}\n                    onInput={e => setSecondNameInput(e.target.value)}\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    className={classes.InputFieldsText}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircleIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    fullWidth={true}\n                />\n                <TextField\n                    value={username}\n                    onInput={e => setUserNameInput(e.target.value)}\n                    label=\"UserName\"\n                    variant=\"outlined\"\n                    className={classes.InputFieldsText}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircleIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    fullWidth={true}\n                />\n                <TextField\n                    value={email}\n                    onInput={e => setEmailInput(e.target.value)}\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    className={classes.InputFieldsText}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AlternateEmailIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    fullWidth={true}\n                />\n                <TextField\n                    value={password}\n                    onInput={e => setPasswordInput(e.target.value)}\n                    label=\"Password\"\n                    variant=\"outlined\"\n                    type='password'\n                    className={classes.InputFieldsText}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <LockOpenIcon />\n                            </InputAdornment>\n                        ),\n                    }}\n                    fullWidth={true}\n                />\n\n\n                {\n                    props.ShowAgreementCheckbox\n                        ? (<div>\n                            <FormControlLabel\n                                value={checkBoxValue}\n                                onChange={e => {\n                                    setCheckBoxInput(e.target.checked)\n                                }}\n                                control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n                                label=\"I agree to the terms and conditions\"\n                            />\n                            <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n                        </div>)\n                        : (\n                            <div>\n                                <Button onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n\n                            </div>\n                        )\n                }\n\n\n            </Box>\n        </>\n    );\n}\n\nAddUserForm.propTypes = {\n    ShowAgreementCheckbox: PropTypes.bool.isRequired,\n};"]},"metadata":{},"sourceType":"module"}