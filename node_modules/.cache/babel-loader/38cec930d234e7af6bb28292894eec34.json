{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\nimport * as authentication from \"./auth/authentication\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    let authState = authentication.getAuthState();\n    this.state = {\n      auth: {\n        loggedIn: authState.userToken !== null,\n        username: authState.username,\n        userToken: authState.userToken,\n        role: authState.role\n      }\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      auth: {\n        loggedIn: this.state.auth.loggedIn,\n        username: this.state.auth.username,\n        userToken: this.state.auth.userToken,\n        role: this.state.auth.role\n      }\n    };\n  }\n\n  login(username, password) {\n    return authentication.login(username, password).then(result => {\n      this.setState({\n        auth: { ...this.state.auth,\n          loggedIn: true,\n          username: result.username,\n          userToken: result.userToken,\n          role: result.role\n        }\n      });\n    }).catch(err => {\n      this._logout();\n\n      return Promise.reject(err);\n    });\n  }\n\n  logout() {\n    return authentication.logout().then(result => {\n      this._logout();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            component: SignUpPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/forgot-password\",\n            component: PasswordRecoverPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/password-reset\",\n            component: PasswordResetPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/home-page\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(MapUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n  _logout() {\n    this.setState({\n      auth: { ...this.state.auth,\n        loggedIn: false,\n        username: null,\n        userToken: null,\n        role: null\n      }\n    });\n  }\n\n}\n\nApp.childContextTypes = {\n  auth: PropTypes.shape({\n    loggedIn: PropTypes.bool,\n    username: PropTypes.string,\n    userToken: PropTypes.string,\n    role: PropTypes.string\n  })\n};\nexport default App;","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js"],"names":["React","PropTypes","BrowserRouter","Router","Route","Switch","LoginPage","SignUpPage","PasswordRecoverPage","PasswordResetPage","MapUser","Auth","authentication","PrivateRoute","App","Component","constructor","authState","getAuthState","state","auth","loggedIn","userToken","username","role","login","bind","logout","getChildContext","password","then","result","setState","catch","err","_logout","Promise","reject","render","childContextTypes","shape","bool","string"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\nimport * as authentication from \"./auth/authentication\";\nimport PrivateRoute from  \"./components/PrivateRoute\";\n\n\nclass App extends React.Component {\n  constructor () {\n    super()\n\n    let authState = authentication.getAuthState()\n    this.state = {\n      auth: {\n        loggedIn: authState.userToken !== null,\n        username: authState.username,\n        userToken: authState.userToken,\n        role: authState.role\n      }\n    }\n\n    this.login = this.login.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n\n  getChildContext () {\n    return {\n      auth: {\n        loggedIn: this.state.auth.loggedIn,\n        username: this.state.auth.username,\n        userToken: this.state.auth.userToken,\n        role: this.state.auth.role\n      }\n    }\n  }\n\n  login (username, password) {\n    return authentication.login(username, password)\n        .then(result => {\n          this.setState({\n            auth: {\n              ...this.state.auth,\n              loggedIn: true,\n              username: result.username,\n              userToken: result.userToken,\n              role: result.role\n            }\n          })\n        })\n        .catch(err => {\n          this._logout()\n          return Promise.reject(err)\n        })\n  }\n\n  logout () {\n    return authentication.logout().then(result => {\n      this._logout()\n    })\n  }\n\n  render () {\n    return (\n        <Router>\n        <div>\n\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}  >\n            </Route>\n            <Route path=\"/sign-up\" component={SignUpPage}>\n            </Route>\n            <Route path=\"/forgot-password\" component={PasswordRecoverPage}>\n            </Route>\n            <Route path=\"/password-reset\" component={PasswordResetPage}>\n            </Route>\n            <PrivateRoute path=\"/home-page\" > <MapUser/></PrivateRoute>\n\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n\n  _logout () {\n    this.setState({\n      auth: {\n        ...this.state.auth,\n        loggedIn: false,\n        username: null,\n        userToken: null,\n        role: null\n      }\n    })\n  }\n\n}\n\nApp.childContextTypes = {\n  auth: PropTypes.shape({\n    loggedIn: PropTypes.bool,\n    username: PropTypes.string,\n    userToken: PropTypes.string,\n    role: PropTypes.string\n  })\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}