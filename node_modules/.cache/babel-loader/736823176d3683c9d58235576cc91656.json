{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Grid, Typography, Link, Box, InputAdornment, Button, FormControl, FormControlLabel, Checkbox, CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { Post } from \"./../apis/api-controller\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Auth from \"./../auth/Auth\";\nimport { green } from \"@material-ui/core/colors\";\nimport { Container } from \"@material-ui/core\";\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useStyle = theme => ({\n  root: {\n    height: \"100vh\",\n    width: \"100%\"\n  },\n  loginButton: {\n    backgroundColor: green[700],\n    color: theme.palette.primary.contrastText,\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    \"&:hover\": {\n      backgroundColor: green[600],\n      color: theme.palette.primary.contrastText\n    },\n    \"&:active\": {\n      backgroundColor: green[700],\n      color: theme.palette.primary.contrastText\n    }\n  },\n  MainTitle: {\n    color: green[700],\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 24\n    }\n  }\n});\n\nasync function GetDeviceId() {\n  const fpPromise = FingerprintJS.load();\n  const fp = await fpPromise;\n  const result = await fp.get(); // This is the visitor identifier:\n\n  const deviceId = result.visitorId;\n  console.log(deviceId);\n  return deviceId;\n}\n\n_c = GetDeviceId;\n\nclass LoginPage extends React.Component {\n  // let history = useHistory();\n  // const handleClick = () => history.push('/goodbye');\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToReferrer: false,\n      email: '',\n      password: ''\n    };\n    this.loginToApi = this.loginToApi.bind(this); // const auth = Auth;\n    // const classes = useStyle();\n    //const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n    this.SubmitLoginDetails = this.SubmitLoginDetails.bind(this);\n  }\n\n  async SubmitLoginDetails() {\n    //event.preventDefault();\n    console.log(\"the email entered is: \", this.state.email);\n    console.log(\"the password entered is: \", this.state.password);\n    const deviceId = await GetDeviceId();\n    Post('/login', {\n      Email: this.state.email,\n      Password: this.state.password,\n      DeviceID: deviceId\n    }).then(response => {\n      var _response$data;\n\n      console.log(\"the response is: \", response);\n\n      if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token) {\n        sessionStorage.setItem('userToken', response.data.access_token); // auth.authenticate()\n\n        this.props.login();\n      }\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              className: classes.MainTitle,\n              children: \"Log In to TruVest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"New Here?  \", /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/sign-up\",\n                children: \" Create an account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              my: 4,\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.email,\n                onInput: e => this.setState({\n                  email: e.target.value\n                }),\n                label: \"Email\",\n                variant: \"outlined\",\n                className: classes.InputFieldsText,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this)\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: this.state.password,\n                onInput: e => this.setState({\n                  email: e.target.value\n                }),\n                placeholder: \"Password\",\n                margin: \"normal\",\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 45\n                  }, this)\n                },\n                variant: \"outlined\",\n                type: \"password\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  label: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Keep me logged in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 48\n                  }, this),\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    style: {\n                      color: green[700]\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.SubmitLoginDetails(),\n                fullWidth: true,\n                className: classes.loginButton,\n                variant: \"contained\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/forgot-password\",\n                  activeClassName: \"PageSwitcher__Item--Active\",\n                  className: \"PageSwitcher__Item\",\n                  children: \"Forgot Password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withStyles(useStyle, {\n  withTheme: true\n})(LoginPage);\nLoginPage.propTypes = {\n  login: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GetDeviceId\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js"],"names":["React","useState","Grid","Typography","Link","Box","InputAdornment","Button","FormControl","FormControlLabel","Checkbox","CssBaseline","makeStyles","TextField","AlternateEmailIcon","LockIcon","Post","PropTypes","withStyles","Auth","green","Container","FingerprintJS","useStyle","theme","root","height","width","loginButton","backgroundColor","color","palette","primary","contrastText","marginTop","spacing","marginBottom","MainTitle","breakpoints","down","fontSize","GetDeviceId","fpPromise","load","fp","result","get","deviceId","visitorId","console","log","LoginPage","Component","constructor","props","state","redirectToReferrer","email","password","loginToApi","bind","SubmitLoginDetails","Email","Password","DeviceID","then","response","data","access_token","sessionStorage","setItem","login","render","classes","e","setState","target","value","InputFieldsText","startAdornment","withTheme","propTypes","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Link,\r\n    Box,\r\n    InputAdornment,\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { Post } from \"./../apis/api-controller\";\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\n\r\nimport Auth from \"./../auth/Auth\"\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\n\r\n\r\nconst useStyle = theme => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    loginButton: {\r\n        backgroundColor: green[700],\r\n        color: theme.palette.primary.contrastText,\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(4),\r\n        \"&:hover\": {\r\n            backgroundColor: green[600],\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: green[700],\r\n            color: theme.palette.primary.contrastText,\r\n        },\r\n    },\r\n    MainTitle: {\r\n        color: green[700],\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: 24\r\n        }\r\n    },\r\n});\r\n\r\nasync function GetDeviceId() {\r\n    const fpPromise = FingerprintJS.load()\r\n    const fp = await fpPromise\r\n    const result = await fp.get()\r\n\r\n    // This is the visitor identifier:\r\n    const deviceId = result.visitorId\r\n    console.log(deviceId);\r\n    return deviceId;\r\n\r\n}\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    // let history = useHistory();\r\n\r\n    // const handleClick = () => history.push('/goodbye');\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirectToReferrer: false,\r\n            email: '',\r\n            password: ''\r\n        }\r\n        this.loginToApi = this.loginToApi.bind(this)\r\n\r\n        // const auth = Auth;\r\n        // const classes = useStyle();\r\n\r\n\r\n        //const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n\r\n        this.SubmitLoginDetails = this.SubmitLoginDetails.bind(this)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async SubmitLoginDetails() {\r\n        //event.preventDefault();\r\n        console.log(\"the email entered is: \", this.state.email);\r\n        console.log(\"the password entered is: \",this.state.password);\r\n\r\n        const deviceId = await GetDeviceId();\r\n\r\n        Post('/login', {\r\n            Email: this.state.email,\r\n            Password: this.state.password,\r\n            DeviceID: deviceId\r\n        })\r\n            .then((response) => {\r\n                console.log(\"the response is: \", response);\r\n                if (response?.data?.access_token) {\r\n                    sessionStorage.setItem('userToken', response.data.access_token)\r\n                    // auth.authenticate()\r\n                    this.props.login()\r\n                }\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <CssBaseline />\r\n                <Container>\r\n                    <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignContent=\"center\"\r\n                        className={classes.root}\r\n                    >\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                                Log In to TruVest\r\n                            </Typography>\r\n                            <Typography>\r\n                                New Here?  <Link href=\"/sign-up\"> Create an account</Link>\r\n                            </Typography>\r\n                            <Box my={4} mb={2}>\r\n                                <TextField\r\n                                    value={this.state.email}\r\n                                    onInput={e => this.setState({email: e.target.value}) }\r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.InputFieldsText}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <AlternateEmailIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    fullWidth={true}\r\n                                />\r\n                                <TextField\r\n                                    value={this.state.password}\r\n                                    onInput={e => this.setState({email: e.target.value})  }\r\n                                    placeholder=\"Password\"\r\n                                    margin=\"normal\"\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <LockIcon />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    type=\"password\"\r\n                                    fullWidth\r\n                                />\r\n                                <FormControl>\r\n                                    <FormControlLabel\r\n                                        label={<Typography>Keep me logged in</Typography>}\r\n                                        control={<Checkbox style={{ color: green[700] }} />}\r\n                                    />\r\n                                </FormControl>\r\n                                <Button onClick={() => this.SubmitLoginDetails()} fullWidth className={classes.loginButton} variant=\"contained\">\r\n                                    Login\r\n                                </Button>\r\n                                <Typography>\r\n                                    <Link href=\"/forgot-password\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Forgot Password?</Link>\r\n                                </Typography>\r\n\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(useStyle, { withTheme: true })(LoginPage);\r\n\r\n\r\n\r\nLoginPage.propTypes = {\r\n    login: PropTypes.func\r\n}"]},"metadata":{},"sourceType":"module"}