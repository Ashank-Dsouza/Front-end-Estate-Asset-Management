{"ast":null,"code":"import React from \"react\";\nimport { Container, Box, Link, TextField, InputAdornment, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n})); // export function SignUpButtonClick(){\n//     console.log(\"a click has been Registered in SignUpButtonClick\");\n// }\n// this.state = {\n//     username : ''\n//   }\n//   this.updateInput = this.updateInput.bind(this);\n//   this.handleSubmit = this.handleSubmit.bind(this);\n//   updateInput(event){\n//   this.setState({username : event.target.value})\n//   }\n//   handleSubmit(){\n//   console.log('Your input value is: ' + this.state.username)\n//   //Send state to the server code\n//   }\n// export default function SingUp() {\n//     const classes = useStyle();\n//     const preventDefault = (event) => {\n//         event.preventDefault();\n//     };\n//     return ( <>\n//     <div>\n//     <input type=\"text\" onChange={this.updateInput}></input>\n//     <input type=\"submit\" onClick={this.handleSubmit} ></input>\n//     </div>\n// </>);\n//     // return (\n//     //     <>\n//     //         <Box className={classes.Container}>\n//     //             <Container maxWidth=\"md\">\n//     //                 <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\n//     //                 <Typography>\n//     //                     Already have an account?{\" \"}\n//     //                     <Link href=\"/login\" >\n//     //                         Login\n//     //                     </Link>\n//     //                 </Typography>\n//     //                 <Box className={classes.InputFields}>\n//     //                     <TextField\n//     //                         label=\"UserName\"\n//     //                         variant=\"outlined\"\n//     //                         className={classes.InputFieldsText}\n//     //                         InputProps={{\n//     //                             startAdornment: (\n//     //                                 <InputAdornment position=\"start\">\n//     //                                     <AccountCircleIcon />\n//     //                                 </InputAdornment>\n//     //                             ),\n//     //                         }}\n//     //                         fullWidth={true}\n//     //                     />\n//     //                     <TextField\n//     //                         label=\"Email\"\n//     //                         variant=\"outlined\"\n//     //                         className={classes.InputFieldsText}\n//     //                         InputProps={{\n//     //                             startAdornment: (\n//     //                                 <InputAdornment position=\"start\">\n//     //                                     <AlternateEmailIcon />\n//     //                                 </InputAdornment>\n//     //                             ),\n//     //                         }}\n//     //                         fullWidth={true}\n//     //                     />\n//     //                     <TextField\n//     //                         label=\"Password\"\n//     //                         variant=\"outlined\"\n//     //                         type='password'\n//     //                         className={classes.InputFieldsText}\n//     //                         InputProps={{\n//     //                             startAdornment: (\n//     //                                 <InputAdornment position=\"start\">\n//     //                                     <LockOpenIcon />\n//     //                                 </InputAdornment>\n//     //                             ),\n//     //                         }}\n//     //                         fullWidth={true}\n//     //                     />\n//     //                     <FormControlLabel\n//     //                         control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n//     //                         label=\"I agree to the terms and conditions\"\n//     //                     />\n//     //                     <Button onClick={() => {SignUpButtonClick()}} variant='contained' className={classes.Button}>Get Started</Button>\n//     //                 </Box>\n//     //                 <Typography>\n//     //                     Â© 2021 All Rights Reserved. CORK is a product of Designreset.\n//     //                     <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\n//     //                     <Link style={{ color: green[700] }}> Terms</Link>.\n//     //                 </Typography>\n//     //             </Container>\n//     //         </Box>\n//     //     </>\n//     // );\n// }","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js"],"names":["React","Container","Box","Link","TextField","InputAdornment","FormControlLabel","Checkbox","Button","makeStyles","Typography","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,SAJJ,EAKIC,cALJ,EAMIC,gBANJ,EAOIC,QAPJ,EAQIC,MARJ,QASO,mBATP;AAUA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAAGN,UAAU,CAAEO,IAAD,KAAW;AACnCf,EAAAA,SAAS,EAAE;AACPgB,IAAAA,OAAO,EAAG,GAAED,IAAI,CAACE,OAAL,CAAa,CAAb,CAAgB,QADrB;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,MAAM,EAAE,OALD;AAMPC,IAAAA,SAAS,EAAE;AANJ,GADwB;AASnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAET,IAAI,CAACE,OAAL,CAAa,CAAb,CADF;AAETQ,IAAAA,YAAY,EAAEV,IAAI,CAACE,OAAL,CAAa,CAAb,CAFL;AAGTS,IAAAA,KAAK,EAAE;AAHE,GATsB;AAcnCC,EAAAA,eAAe,EAAE;AACbF,IAAAA,YAAY,EAAEV,IAAI,CAACE,OAAL,CAAa,CAAb,CADD;AAEbW,IAAAA,QAAQ,EAAE,GAFG;AAGbV,IAAAA,OAAO,EAAE,OAHI;AAIbW,IAAAA,KAAK,EAAG,GAAEnB,KAAK,CAAC,GAAD,CAAM,aAJR;AAKb,eAAW;AACPmB,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD;AADL,KALE;AAQb,gBAAY;AACRmB,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD,CADJ;AAERoB,MAAAA,WAAW,EAAEpB,KAAK,CAAC,GAAD;AAFV;AARC,GAdkB;AA2BnCqB,EAAAA,iBAAiB,EAAE;AACfF,IAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD;AADG,GA3BgB;AA8BnCH,EAAAA,MAAM,EAAE;AACJW,IAAAA,OAAO,EAAE,OADL;AAEJW,IAAAA,KAAK,EAAE,OAFH;AAGJG,IAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD,CAHlB;AAIJ,eAAW;AACPsB,MAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD;AADf;AAJP;AA9B2B,CAAX,CAAD,CAA3B,C,CAwCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Container,\r\n    Box,\r\n    Link,\r\n    TextField,\r\n    InputAdornment,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    Container: {\r\n        padding: `${them.spacing(4)}px 0px`,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        maxHeight: 600\r\n    },\r\n    InputFields: {\r\n        marginTop: them.spacing(8),\r\n        marginBottom: them.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    InputFieldsText: {\r\n        marginBottom: them.spacing(4),\r\n        maxWidth: 600,\r\n        display: 'block',\r\n        color: `${green[700]} !important`,\r\n        '&:hover': {\r\n            color: green[700],\r\n        },\r\n        '&:active': {\r\n            color: green[700],\r\n            borderColor: green[700],\r\n        }\r\n    },\r\n    CheckboxControler: {\r\n        color: green[700],\r\n    },\r\n    Button: {\r\n        display: 'block',\r\n        color: 'white',\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        }\r\n    }\r\n}));\r\n\r\n// export function SignUpButtonClick(){\r\n//     console.log(\"a click has been Registered in SignUpButtonClick\");\r\n// }\r\n\r\n// this.state = {\r\n//     username : ''\r\n//   }\r\n  \r\n//   this.updateInput = this.updateInput.bind(this);\r\n//   this.handleSubmit = this.handleSubmit.bind(this);\r\n  \r\n  \r\n  \r\n//   updateInput(event){\r\n//   this.setState({username : event.target.value})\r\n//   }\r\n  \r\n  \r\n//   handleSubmit(){\r\n//   console.log('Your input value is: ' + this.state.username)\r\n//   //Send state to the server code\r\n//   }\r\n\r\n\r\n\r\n// export default function SingUp() {\r\n//     const classes = useStyle();\r\n\r\n//     const preventDefault = (event) => {\r\n//         event.preventDefault();\r\n//     };\r\n\r\n//     return ( <>\r\n//     <div>\r\n//     <input type=\"text\" onChange={this.updateInput}></input>\r\n//     <input type=\"submit\" onClick={this.handleSubmit} ></input>\r\n//     </div>\r\n// </>);\r\n\r\n\r\n//     // return (\r\n//     //     <>\r\n//     //         <Box className={classes.Container}>\r\n//     //             <Container maxWidth=\"md\">\r\n//     //                 <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\r\n//     //                 <Typography>\r\n//     //                     Already have an account?{\" \"}\r\n//     //                     <Link href=\"/login\" >\r\n//     //                         Login\r\n//     //                     </Link>\r\n//     //                 </Typography>\r\n//     //                 <Box className={classes.InputFields}>\r\n//     //                     <TextField\r\n//     //                         label=\"UserName\"\r\n//     //                         variant=\"outlined\"\r\n//     //                         className={classes.InputFieldsText}\r\n//     //                         InputProps={{\r\n//     //                             startAdornment: (\r\n//     //                                 <InputAdornment position=\"start\">\r\n//     //                                     <AccountCircleIcon />\r\n//     //                                 </InputAdornment>\r\n//     //                             ),\r\n//     //                         }}\r\n//     //                         fullWidth={true}\r\n//     //                     />\r\n//     //                     <TextField\r\n//     //                         label=\"Email\"\r\n//     //                         variant=\"outlined\"\r\n//     //                         className={classes.InputFieldsText}\r\n//     //                         InputProps={{\r\n//     //                             startAdornment: (\r\n//     //                                 <InputAdornment position=\"start\">\r\n//     //                                     <AlternateEmailIcon />\r\n//     //                                 </InputAdornment>\r\n//     //                             ),\r\n//     //                         }}\r\n//     //                         fullWidth={true}\r\n//     //                     />\r\n//     //                     <TextField\r\n//     //                         label=\"Password\"\r\n//     //                         variant=\"outlined\"\r\n//     //                         type='password'\r\n//     //                         className={classes.InputFieldsText}\r\n//     //                         InputProps={{\r\n//     //                             startAdornment: (\r\n//     //                                 <InputAdornment position=\"start\">\r\n//     //                                     <LockOpenIcon />\r\n//     //                                 </InputAdornment>\r\n//     //                             ),\r\n//     //                         }}\r\n//     //                         fullWidth={true}\r\n//     //                     />\r\n//     //                     <FormControlLabel\r\n//     //                         control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\r\n//     //                         label=\"I agree to the terms and conditions\"\r\n//     //                     />\r\n//     //                     <Button onClick={() => {SignUpButtonClick()}} variant='contained' className={classes.Button}>Get Started</Button>\r\n//     //                 </Box>\r\n//     //                 <Typography>\r\n//     //                     Â© 2021 All Rights Reserved. CORK is a product of Designreset.\r\n//     //                     <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\r\n//     //                     <Link style={{ color: green[700] }}> Terms</Link>.\r\n//     //                 </Typography>\r\n//     //             </Container>\r\n//     //         </Box>\r\n//     //     </>\r\n//     // );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}