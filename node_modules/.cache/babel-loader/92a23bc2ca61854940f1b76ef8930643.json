{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Container, Box, TextField, InputAdornment, FormControlLabel, Checkbox, Button, CssBaseline } from \"@material-ui/core\";\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { Post } from \"../../apis/api-controller\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport default function AddUserForm(props) {\n  _s();\n\n  const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n  const [username, setUserNameInput] = useState(''); // '' is the initial state value\n\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n  const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n\n  const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n  const [checkBoxValue, setCheckBoxInput] = useState(false);\n  const classes = useStyle();\n\n  const preventDefault = event => {\n    event.preventDefault();\n  };\n\n  const submitOnClick = async event => {\n    console.log(\"the submitOnClick\");\n    console.log(\"the value of checkbox input is: \", checkBoxValue);\n    console.log(\"the value of firstname input is: \", firstname);\n    console.log(\"the value of lastname input is: \", lastname);\n    console.log(\"the value of password input is: \", password);\n    console.log(\"the value of email input is: \", email);\n    console.log(\"the value of username input is: \", username);\n    var response = await Post('/signup', {\n      FirstName: firstname,\n      LastName: lastname,\n      UserName: username,\n      Email: email,\n      Password: password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.InputFields,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: firstname,\n        onInput: e => setFirstNameInput(e.target.value),\n        label: \"First Name\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: lastname,\n        onInput: e => setSecondNameInput(e.target.value),\n        label: \"Last Name\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: username,\n        onInput: e => setUserNameInput(e.target.value),\n        label: \"UserName\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: email,\n        onInput: e => setEmailInput(e.target.value),\n        label: \"Email\",\n        variant: \"outlined\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: password,\n        onInput: e => setPasswordInput(e.target.value),\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        className: classes.InputFieldsText,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.ShowAgreementCheckbox ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: checkBoxValue,\n            onChange: e => {\n              setCheckBoxInput(e.target.checked);\n            },\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: green['A700'],\n              className: classes.CheckboxControler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 22\n            }, this),\n            label: \"I agree to the terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !checkBoxValue,\n            onClick: () => submitOnClick(),\n            variant: \"contained\",\n            className: classes.Button,\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            value: this.state.inputText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: checkBoxValue,\n        onChange: e => {\n          setCheckBoxInput(e.target.checked);\n        },\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: green['A700'],\n          className: classes.CheckboxControler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 26\n        }, this),\n        label: \"I agree to the terms and conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !checkBoxValue,\n        onClick: () => submitOnClick(),\n        variant: \"contained\",\n        className: classes.Button,\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddUserForm, \"Xp8ASqLIjbQIs1pvJ08VTg5j8Cw=\", false, function () {\n  return [useStyle];\n});\n\n_c = AddUserForm;\nAddUserForm.propTypes = {\n  ShowAgreementCheckbox: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js"],"names":["React","useState","Container","Box","TextField","InputAdornment","FormControlLabel","Checkbox","Button","CssBaseline","HashRouter","Router","Route","NavLink","Post","PropTypes","makeStyles","Typography","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor","AddUserForm","props","password","setPasswordInput","username","setUserNameInput","email","setEmailInput","firstname","setFirstNameInput","lastname","setSecondNameInput","checkBoxValue","setCheckBoxInput","classes","preventDefault","event","submitOnClick","console","log","response","FirstName","LastName","UserName","Email","Password","e","target","value","startAdornment","ShowAgreementCheckbox","checked","handleChange","state","inputText","propTypes","bool","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACIC,SADJ,EAEIC,GAFJ,EAGIC,SAHJ,EAIIC,cAJJ,EAKIC,gBALJ,EAMIC,QANJ,EAOIC,MAPJ,EAQIC,WARJ,QASO,mBATP;AAUA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,QAAqD,kBAArD;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,QAAQ,GAAGN,UAAU,CAAEO,IAAD,KAAW;AACnCrB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,OAAO,EAAG,GAAED,IAAI,CAACE,OAAL,CAAa,CAAb,CAAgB,QADrB;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,MAAM,EAAE,OALD;AAMPC,IAAAA,SAAS,EAAE;AANJ,GADwB;AASnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAET,IAAI,CAACE,OAAL,CAAa,CAAb,CADF;AAETQ,IAAAA,YAAY,EAAEV,IAAI,CAACE,OAAL,CAAa,CAAb,CAFL;AAGTS,IAAAA,KAAK,EAAE;AAHE,GATsB;AAcnCC,EAAAA,eAAe,EAAE;AACbF,IAAAA,YAAY,EAAEV,IAAI,CAACE,OAAL,CAAa,CAAb,CADD;AAEbW,IAAAA,QAAQ,EAAE,GAFG;AAGbV,IAAAA,OAAO,EAAE,OAHI;AAIbW,IAAAA,KAAK,EAAG,GAAEnB,KAAK,CAAC,GAAD,CAAM,aAJR;AAKb,eAAW;AACPmB,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD;AADL,KALE;AAQb,gBAAY;AACRmB,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD,CADJ;AAERoB,MAAAA,WAAW,EAAEpB,KAAK,CAAC,GAAD;AAFV;AARC,GAdkB;AA2BnCqB,EAAAA,iBAAiB,EAAE;AACfF,IAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD;AADG,GA3BgB;AA8BnCV,EAAAA,MAAM,EAAE;AACJkB,IAAAA,OAAO,EAAE,OADL;AAEJW,IAAAA,KAAK,EAAE,OAFH;AAGJG,IAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD,CAHlB;AAIJ,eAAW;AACPsB,MAAAA,eAAe,EAAEtB,KAAK,CAAC,GAAD;AADf;AAJP;AA9B2B,CAAX,CAAD,CAA3B;AAwCA,eAAe,SAASuB,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+B3C,QAAQ,CAAC,EAAD,CAA7C,CADuC,CACY;;AACnD,QAAM,CAAC4C,QAAD,EAAWC,gBAAX,IAA+B7C,QAAQ,CAAC,EAAD,CAA7C,CAFuC,CAEY;;AACnD,QAAM,CAAC8C,KAAD,EAAQC,aAAR,IAAyB/C,QAAQ,CAAC,EAAD,CAAvC,CAHuC,CAGM;;AAE7C,QAAM,CAACgD,SAAD,EAAYC,iBAAZ,IAAiCjD,QAAQ,CAAC,EAAD,CAA/C,CALuC,CAKc;;AACrD,QAAM,CAACkD,QAAD,EAAWC,kBAAX,IAAiCnD,QAAQ,CAAC,EAAD,CAA/C,CANuC,CAMc;;AAErD,QAAM,CAACoD,aAAD,EAAgBC,gBAAhB,IAAoCrD,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMsD,OAAO,GAAGjC,QAAQ,EAAxB;;AAEA,QAAMkC,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACD,cAAN;AACH,GAFD;;AAIA,QAAME,aAAa,GAAG,MAAOD,KAAP,IAAiB;AACnCE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDP,aAAhD;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDX,SAAjD;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDT,QAAhD;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDjB,QAAhD;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6Cb,KAA7C;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDf,QAAhD;AAEA,QAAIgB,QAAQ,GAAG,MAAM/C,IAAI,CAAC,SAAD,EAAY;AACjCgD,MAAAA,SAAS,EAAEb,SADsB;AAEjCc,MAAAA,QAAQ,EAAEZ,QAFuB;AAGjCa,MAAAA,QAAQ,EAAEnB,QAHuB;AAIjCoB,MAAAA,KAAK,EAAElB,KAJ0B;AAKjCmB,MAAAA,QAAQ,EAAEvB;AALuB,KAAZ,CAAzB;AAQH,GAjBD;;AAmBA,sBACI;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEY,OAAO,CAACxB,WAAxB;AAAA,8BAEI,QAAC,SAAD;AACI,QAAA,KAAK,EAAEkB,SADX;AAEI,QAAA,OAAO,EAAEkB,CAAC,IAAIjB,iBAAiB,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFnC;AAGI,QAAA,KAAK,EAAC,YAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,SAAS,EAAEd,OAAO,CAACpB,eALvB;AAMI,QAAA,UAAU,EAAE;AACRmC,UAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA,mCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,SANhB;AAaI,QAAA,SAAS,EAAE;AAbf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBI,QAAC,SAAD;AACI,QAAA,KAAK,EAAEnB,QADX;AAEI,QAAA,OAAO,EAAEgB,CAAC,IAAIf,kBAAkB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAFpC;AAGI,QAAA,KAAK,EAAC,WAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,SAAS,EAAEd,OAAO,CAACpB,eALvB;AAMI,QAAA,UAAU,EAAE;AACRmC,UAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA,mCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,SANhB;AAaI,QAAA,SAAS,EAAE;AAbf;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAgCI,QAAC,SAAD;AACI,QAAA,KAAK,EAAEzB,QADX;AAEI,QAAA,OAAO,EAAEsB,CAAC,IAAIrB,gBAAgB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,SAAS,EAAEd,OAAO,CAACpB,eALvB;AAMI,QAAA,UAAU,EAAE;AACRmC,UAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA,mCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,SANhB;AAaI,QAAA,SAAS,EAAE;AAbf;AAAA;AAAA;AAAA;AAAA,cAhCJ,eA+CI,QAAC,SAAD;AACI,QAAA,KAAK,EAAEvB,KADX;AAEI,QAAA,OAAO,EAAEoB,CAAC,IAAInB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF/B;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,SAAS,EAAEd,OAAO,CAACpB,eALvB;AAMI,QAAA,UAAU,EAAE;AACRmC,UAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA,mCACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,SANhB;AAaI,QAAA,SAAS,EAAE;AAbf;AAAA;AAAA;AAAA;AAAA,cA/CJ,eA8DI,QAAC,SAAD;AACI,QAAA,KAAK,EAAE3B,QADX;AAEI,QAAA,OAAO,EAAEwB,CAAC,IAAIvB,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,UALT;AAMI,QAAA,SAAS,EAAEd,OAAO,CAACpB,eANvB;AAOI,QAAA,UAAU,EAAE;AACRmC,UAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA,mCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,SAPhB;AAcI,QAAA,SAAS,EAAE;AAdf;AAAA;AAAA;AAAA;AAAA,cA9DJ,eA+EA;AAAA,kBAGE5B,KAAK,CAAC6B,qBAAN,gBACI;AAAA,kCACC,QAAC,gBAAD;AACH,YAAA,KAAK,EAAElB,aADJ;AAEH,YAAA,QAAQ,EAAEc,CAAC,IAAI;AACXb,cAAAA,gBAAgB,CAACa,CAAC,CAACC,MAAF,CAASI,OAAV,CAAhB;AACH,aAJE;AAKH,YAAA,OAAO,eAAE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEtD,KAAK,CAAC,MAAD,CAAtB;AAAgC,cAAA,SAAS,EAAEqC,OAAO,CAAChB;AAAnD;AAAA;AAAA;AAAA;AAAA,oBALN;AAMH,YAAA,KAAK,EAAC;AANH;AAAA;AAAA;AAAA;AAAA,kBADD,eASN,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,CAACc,aAAnB;AAAkC,YAAA,OAAO,EAAE,MAAMK,aAAa,EAA9D;AAAkE,YAAA,OAAO,EAAC,WAA1E;AAAsF,YAAA,SAAS,EAAEH,OAAO,CAAC/C,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATM;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAaE;AAAA,iCACE;AACE,YAAA,QAAQ,EAAE,KAAKiE,YADjB;AAEE,YAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAFpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,cA/EA,eA0GI,QAAC,gBAAD;AACI,QAAA,KAAK,EAAEtB,aADX;AAEI,QAAA,QAAQ,EAAEc,CAAC,IAAI;AACXb,UAAAA,gBAAgB,CAACa,CAAC,CAACC,MAAF,CAASI,OAAV,CAAhB;AACH,SAJL;AAKI,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEtD,KAAK,CAAC,MAAD,CAAtB;AAAgC,UAAA,SAAS,EAAEqC,OAAO,CAAChB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBALb;AAMI,QAAA,KAAK,EAAC;AANV;AAAA;AAAA;AAAA;AAAA,cA1GJ,eAkHI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACc,aAAnB;AAAkC,QAAA,OAAO,EAAE,MAAMK,aAAa,EAA9D;AAAkE,QAAA,OAAO,EAAC,WAA1E;AAAsF,QAAA,SAAS,EAAEH,OAAO,CAAC/C,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAwHH;;GA3JuBiC,W;UAUJnB,Q;;;KAVImB,W;AA6JxBA,WAAW,CAACmC,SAAZ,GAAwB;AACpBL,EAAAA,qBAAqB,EAAExD,SAAS,CAAC8D,IAAV,CAAeC;AADlB,CAAxB","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Container,\n    Box,\n    TextField,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    CssBaseline\n} from \"@material-ui/core\";\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { Post } from \"../../apis/api-controller\";\nimport PropTypes from 'prop-types';\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst useStyle = makeStyles((them) => ({\n    Container: {\n        padding: `${them.spacing(4)}px 0px`,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        maxHeight: 600\n    },\n    InputFields: {\n        marginTop: them.spacing(8),\n        marginBottom: them.spacing(8),\n        width: \"100%\",\n    },\n    InputFieldsText: {\n        marginBottom: them.spacing(4),\n        maxWidth: 600,\n        display: 'block',\n        color: `${green[700]} !important`,\n        '&:hover': {\n            color: green[700],\n        },\n        '&:active': {\n            color: green[700],\n            borderColor: green[700],\n        }\n    },\n    CheckboxControler: {\n        color: green[700],\n    },\n    Button: {\n        display: 'block',\n        color: 'white',\n        backgroundColor: green[700],\n        '&:hover': {\n            backgroundColor: green[900],\n        }\n    }\n}));\n\nexport default function AddUserForm(props) {\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\n\n    const [checkBoxValue, setCheckBoxInput] = useState(false);\n\n    const classes = useStyle();\n\n    const preventDefault = (event) => {\n        event.preventDefault();\n    };\n\n    const submitOnClick = async (event) => {\n        console.log(\"the submitOnClick\");\n        console.log(\"the value of checkbox input is: \", checkBoxValue);\n        console.log(\"the value of firstname input is: \", firstname);\n        console.log(\"the value of lastname input is: \", lastname);\n        console.log(\"the value of password input is: \", password);\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of username input is: \", username);\n\n        var response = await Post('/signup', {\n            FirstName: firstname,\n            LastName: lastname,\n            UserName: username,\n            Email: email,\n            Password: password\n        });\n\n    }\n\n    return (\n        <>\n        <Box className={classes.InputFields}>\n\n            <TextField\n                value={firstname}\n                onInput={e => setFirstNameInput(e.target.value)}\n                label=\"First Name\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={lastname}\n                onInput={e => setSecondNameInput(e.target.value)}\n                label=\"Last Name\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={username}\n                onInput={e => setUserNameInput(e.target.value)}\n                label=\"UserName\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircleIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={email}\n                onInput={e => setEmailInput(e.target.value)}\n                label=\"Email\"\n                variant=\"outlined\"\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AlternateEmailIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n            <TextField\n                value={password}\n                onInput={e => setPasswordInput(e.target.value)}\n                label=\"Password\"\n                variant=\"outlined\"\n                type='password'\n                className={classes.InputFieldsText}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <LockOpenIcon />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth={true}\n            />\n        \n        <div>\n        \n        {\n          props.ShowAgreementCheckbox\n          ? ( <div> \n               <FormControlLabel\n            value={checkBoxValue}\n            onChange={e => {\n                setCheckBoxInput(e.target.checked)\n            }}\n            control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n            label=\"I agree to the terms and conditions\"\n        />\n        <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n  </div>)\n          : (\n            <p>\n              <input\n                onChange={this.handleChange}\n                value={this.state.inputText} />\n            </p>\n          )\n        }\n\n      </div>\n            \n\n            <FormControlLabel\n                value={checkBoxValue}\n                onChange={e => {\n                    setCheckBoxInput(e.target.checked)\n                }}\n                control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n                label=\"I agree to the terms and conditions\"\n            />\n            <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\n        </Box> \n        </>\n    );\n}\n\nAddUserForm.propTypes = {\n    ShowAgreementCheckbox: PropTypes.bool.isRequired,\n  };"]},"metadata":{},"sourceType":"module"}