{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, createContext, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthExample() {\n  // const { token, setToken } = useToken();\n  return (\n    /*#__PURE__*/\n    // <ProvideAuth>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            component: SignUpPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/forgot-password\",\n            component: PasswordRecoverPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/password-reset\",\n            component: PasswordResetPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/home-page\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(MapUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) // </ProvideAuth>\n\n  );\n}\n_c = AuthExample;\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\n\nconst authContext = /*#__PURE__*/createContext();\n\nfunction ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c2 = ProvideAuth;\n\nfunction useAuth() {\n  _s2();\n\n  return useContext(authContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  const [user, setUser] = useState(null);\n\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n      setUser(\"user\");\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      setUser(null);\n      cb();\n    });\n  };\n\n  return {\n    user,\n    signin,\n    signout\n  };\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n\n_s3(useProvideAuth, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  let auth = Auth;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => auth.IsAuthenticated() ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = PrivateRoute;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AuthExample\");\n$RefreshReg$(_c2, \"ProvideAuth\");\n$RefreshReg$(_c3, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js"],"names":["React","useContext","createContext","useState","BrowserRouter","Router","Switch","Route","Redirect","useHistory","LoginPage","SignUpPage","PasswordRecoverPage","PasswordResetPage","MapUser","Auth","AuthExample","fakeAuth","isAuthenticated","signin","cb","setTimeout","signout","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","user","setUser","PrivateRoute","rest","location","IsAuthenticated","pathname","state","from"],"mappings":"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","sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\n\nexport default function AuthExample() {\n    // const { token, setToken } = useToken();\n\n  return (\n    // <ProvideAuth>\n      <Router>\n        <div>\n\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}  >\n            </Route>\n            <Route path=\"/sign-up\" component={SignUpPage}>\n            </Route>\n            <Route path=\"/forgot-password\" component={PasswordRecoverPage}>\n            </Route>\n            <Route path=\"/password-reset\" component={PasswordResetPage}>\n            </Route>\n            <PrivateRoute path=\"/home-page\" > <MapUser/></PrivateRoute>\n\n          </Switch>\n        </div>\n      </Router>\n    // </ProvideAuth>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\nconst authContext = createContext();\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n      setUser(\"user\");\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      setUser(null);\n      cb();\n    });\n  };\n\n  return {\n    user,\n    signin,\n    signout\n  };\n}\n\n\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = Auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => \n        auth.IsAuthenticated() ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      \n      }\n    />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}