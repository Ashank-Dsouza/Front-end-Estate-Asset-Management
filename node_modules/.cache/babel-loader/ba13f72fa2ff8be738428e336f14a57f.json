{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthExample() {\n  // const { token, setToken } = useToken();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          component: SignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgot-password\",\n          component: PasswordRecoverPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/password-reset\",\n          component: PasswordResetPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/home-page\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MapUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n_c = AuthExample;\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  let auth = Auth;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => auth.isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = PrivateRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthExample\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Redirect","LoginPage","SignUpPage","PasswordRecoverPage","PasswordResetPage","MapUser","Auth","AuthExample","PrivateRoute","children","rest","auth","location","isAuthenticated","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP;AAOA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC;AAEF,sBACI,QAAC,MAAD;AAAA,2BACE;AAAA,6BAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEN;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,SAAS,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,YAAnB;AAAA,uCAAkC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBD,C,CAID;AACA;;KA3BwBG,W;;AA4BxB,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAC3C,MAAIC,IAAI,GAAGL,IAAX;AACA,sBACE,QAAC,KAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KACND,IAAI,CAACE,eAAL,GACEJ,QADF,gBAGE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFK,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;MApBQJ,Y","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/singUpPage\";\nimport PasswordRecoverPage from \"./pages/PasswordRecoveryPage\";\nimport PasswordResetPage from \"./pages/PasswordReset\";\nimport MapUser from \"./pages/MapUser\";\nimport Auth from './auth/Auth';\n\nexport default function AuthExample() {\n    // const { token, setToken } = useToken();\n\n  return (\n      <Router>\n        <div>\n\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage}  >\n            </Route>\n            <Route path=\"/sign-up\" component={SignUpPage}>\n            </Route>\n            <Route path=\"/forgot-password\" component={PasswordRecoverPage}>\n            </Route>\n            <Route path=\"/password-reset\" component={PasswordResetPage}>\n            </Route>\n            <PrivateRoute path=\"/home-page\" > <MapUser/></PrivateRoute>\n\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\n\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = Auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => \n        auth.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      \n      }\n    />\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}