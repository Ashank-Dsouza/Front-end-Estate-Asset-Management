{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport { Grid, Typography, Link, Box, InputAdornment, Button, FormControl, FormControlLabel, Checkbox, CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { TextField } from \"@material-ui/core\";\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { HashRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport { Post } from \"./../apis/api-controller\";\nimport Auth from './../auth/Auth';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { green } from \"@material-ui/core/colors\";\nimport { Container } from \"@material-ui/core\";\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  root: {\n    height: \"100vh\",\n    width: \"100%\"\n  },\n  loginButton: {\n    backgroundColor: green[700],\n    color: them.palette.primary.contrastText,\n    marginTop: them.spacing(4),\n    marginBottom: them.spacing(4),\n    \"&:hover\": {\n      backgroundColor: green[600],\n      color: them.palette.primary.contrastText\n    },\n    \"&:active\": {\n      backgroundColor: green[700],\n      color: them.palette.primary.contrastText\n    }\n  },\n  MainTitle: {\n    color: green[700],\n    [them.breakpoints.down('sm')]: {\n      fontSize: 24\n    }\n  }\n}));\n\nasync function GetDeviceId() {\n  const fpPromise = FingerprintJS.load();\n  const fp = await fpPromise;\n  const result = await fp.get(); // This is the visitor identifier:\n\n  const deviceId = result.visitorId;\n  console.log(deviceId);\n  return deviceId;\n}\n\n_c = GetDeviceId;\nexport default function LoginPage({\n  setToken\n}) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyle();\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\n\n  const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n  const submitLoginDetails = async event => {\n    console.log(\"the email entered is: \", email);\n    console.log(\"the password entered is: \", password);\n    const deviceId = await GetDeviceId();\n    var response = await Post('/login', {\n      Email: email,\n      Password: password,\n      DeviceID: deviceId\n    });\n\n    if (response) {\n      console.log(\"setting token: \", response);\n      setToken(response.data);\n    } // if (response) {\n    //     console.log(\"the access token is: \", response.data.access_token);\n    //     response = response.data;\n    //     // var jsonResponse = await response.JSON()\n    //     // response = response.data;\n    //     // console.log(\"the response data is \", response);\n    //     if (response && response.access_token) {\n    //         console.log(\"login authenticated!!!\");\n    //         Auth.authenticate();\n    //         history.push('/home-page');\n    //     }\n    // }\n    // else {\n    //     console.log(\"reponse was null\");\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.MainTitle,\n            children: \"Log In to TruVest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"New Here?  \", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/#sign-up\",\n              children: \" Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            my: 4,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: email,\n              onInput: e => setEmailInput(e.target.value),\n              label: \"Email\",\n              variant: \"outlined\",\n              className: classes.InputFieldsText,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(AlternateEmailIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: password,\n              onInput: e => setPasswordInput(e.target.value),\n              placeholder: \"Password\",\n              margin: \"normal\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)\n              },\n              variant: \"outlined\",\n              type: \"password\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Keep me logged in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 44\n                }, this),\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  style: {\n                    color: green[700]\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => submitLoginDetails(),\n              fullWidth: true,\n              className: classes.loginButton,\n              variant: \"contained\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/#forgot-password\",\n                activeClassName: \"PageSwitcher__Item--Active\",\n                className: \"PageSwitcher__Item\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginPage, \"dJft7gamynIuwISPoXUj8JpzYZ4=\", false, function () {\n  return [useHistory, useStyle];\n});\n\n_c2 = LoginPage;\nLoginPage.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetDeviceId\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js"],"names":["React","useState","axios","Grid","Typography","Link","Box","InputAdornment","Button","FormControl","FormControlLabel","Checkbox","CssBaseline","makeStyles","RouterLink","TextField","AlternateEmailIcon","AccountCircleIcon","LockIcon","HashRouter","Router","Route","NavLink","Switch","Post","Auth","useHistory","PropTypes","green","Container","FingerprintJS","useStyle","them","root","height","width","loginButton","backgroundColor","color","palette","primary","contrastText","marginTop","spacing","marginBottom","MainTitle","breakpoints","down","fontSize","GetDeviceId","fpPromise","load","fp","result","get","deviceId","visitorId","console","log","LoginPage","setToken","history","classes","email","setEmailInput","password","setPasswordInput","submitLoginDetails","event","response","Email","Password","DeviceID","data","e","target","value","InputFieldsText","startAdornment","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,IAHJ,EAIIC,GAJJ,EAKIC,cALJ,EAMIC,MANJ,EAOIC,WAPJ,EAQIC,gBARJ,EASIC,QATJ,EAUIC,WAVJ,QAWO,mBAXP;AAYA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASR,IAAI,IAAIS,UAAjB,QAAmC,kBAAnC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAKA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAGA,MAAMC,QAAQ,GAAGlB,UAAU,CAAEmB,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,OADN;AAEFC,IAAAA,KAAK,EAAE;AAFL,GAD6B;AAKnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,eAAe,EAAET,KAAK,CAAC,GAAD,CADb;AAETU,IAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaC,OAAb,CAAqBC,YAFnB;AAGTC,IAAAA,SAAS,EAAEV,IAAI,CAACW,OAAL,CAAa,CAAb,CAHF;AAITC,IAAAA,YAAY,EAAEZ,IAAI,CAACW,OAAL,CAAa,CAAb,CAJL;AAKT,eAAW;AACPN,MAAAA,eAAe,EAAET,KAAK,CAAC,GAAD,CADf;AAEPU,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaC,OAAb,CAAqBC;AAFrB,KALF;AAST,gBAAY;AACRJ,MAAAA,eAAe,EAAET,KAAK,CAAC,GAAD,CADd;AAERU,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaC,OAAb,CAAqBC;AAFpB;AATH,GALsB;AAmBnCI,EAAAA,SAAS,EAAE;AACPP,IAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD,CADL;AAEP,KAACI,IAAI,CAACc,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAD,GAA+B;AAC3BC,MAAAA,QAAQ,EAAE;AADiB;AAFxB;AAnBwB,CAAX,CAAD,CAA3B;;AA2BA,eAAeC,WAAf,GAA6B;AACzB,QAAMC,SAAS,GAAGpB,aAAa,CAACqB,IAAd,EAAlB;AACA,QAAMC,EAAE,GAAG,MAAMF,SAAjB;AACA,QAAMG,MAAM,GAAG,MAAMD,EAAE,CAACE,GAAH,EAArB,CAHyB,CAKzB;;AACA,QAAMC,QAAQ,GAAGF,MAAM,CAACG,SAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAP;AAEH;;KAVcN,W;AAYf,eAAe,SAASU,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiC;AAAA;;AAC5C,MAAIC,OAAO,GAAGnC,UAAU,EAAxB;AAEA,QAAMoC,OAAO,GAAG/B,QAAQ,EAAxB;AAEA,QAAM,CAACgC,KAAD,EAAQC,aAAR,IAAyB/D,QAAQ,CAAC,EAAD,CAAvC,CAL4C,CAKC;;AAC7C,QAAM,CAACgE,QAAD,EAAWC,gBAAX,IAA+BjE,QAAQ,CAAC,EAAD,CAA7C,CAN4C,CAMO;;AAGnD,QAAMkE,kBAAkB,GAAG,MAAOC,KAAP,IAAiB;AACxCX,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCK,KAAtC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCO,QAAzC;AAEA,UAAMV,QAAQ,GAAG,MAAMN,WAAW,EAAlC;AAEA,QAAIoB,QAAQ,GAAG,MAAM7C,IAAI,CAAC,QAAD,EAAW;AAChC8C,MAAAA,KAAK,EAAEP,KADyB;AAEhCQ,MAAAA,QAAQ,EAAEN,QAFsB;AAGhCO,MAAAA,QAAQ,EAAEjB;AAHsB,KAAX,CAAzB;;AAMA,QAAIc,QAAJ,EAAc;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,QAA/B;AACAT,MAAAA,QAAQ,CAACS,QAAQ,CAACI,IAAV,CAAR;AACH,KAfuC,CAgBxC;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACH,GApCD;;AAuCA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,cAAc,EAAC,QAFnB;AAGI,QAAA,YAAY,EAAC,QAHjB;AAII,QAAA,SAAS,EAAEX,OAAO,CAAC7B,IAJvB;AAAA,+BAMI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAE6B,OAAO,CAACjB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,UAAD;AAAA,mDACe,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAA,oCACI,QAAC,SAAD;AACI,cAAA,KAAK,EAAEkB,KADX;AAEI,cAAA,OAAO,EAAEW,CAAC,IAAIV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAF/B;AAGI,cAAA,KAAK,EAAC,OAHV;AAII,cAAA,OAAO,EAAC,UAJZ;AAKI,cAAA,SAAS,EAAEd,OAAO,CAACe,eALvB;AAMI,cAAA,UAAU,EAAE;AACRC,gBAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,kBAAA,QAAQ,EAAC,OAAzB;AAAA,yCACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,eANhB;AAaI,cAAA,SAAS,EAAE;AAbf;AAAA;AAAA;AAAA;AAAA,oBADJ,eAgBI,QAAC,SAAD;AACI,cAAA,KAAK,EAAEb,QADX;AAEI,cAAA,OAAO,EAAES,CAAC,IAAIR,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAGI,cAAA,WAAW,EAAC,UAHhB;AAII,cAAA,MAAM,EAAC,QAJX;AAKI,cAAA,UAAU,EAAE;AACRE,gBAAAA,cAAc,eACV,QAAC,cAAD;AAAgB,kBAAA,QAAQ,EAAC,OAAzB;AAAA,yCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,eALhB;AAYI,cAAA,OAAO,EAAC,UAZZ;AAaI,cAAA,IAAI,EAAC,UAbT;AAcI,cAAA,SAAS;AAdb;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eAgCI,QAAC,WAAD;AAAA,qCACI,QAAC,gBAAD;AACI,gBAAA,KAAK,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADX;AAEI,gBAAA,OAAO,eAAE,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAE;AAAExC,oBAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD;AAAd;AAAjB;AAAA;AAAA;AAAA;AAAA;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAhCJ,eAsCI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMuC,kBAAkB,EAAzC;AAA6C,cAAA,SAAS,MAAtD;AAAuD,cAAA,SAAS,EAAEL,OAAO,CAAC1B,WAA1E;AAAuF,cAAA,OAAO,EAAC,WAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCJ,eAyCI,QAAC,UAAD;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,mBAAX;AAA+B,gBAAA,eAAe,EAAC,4BAA/C;AAA4E,gBAAA,SAAS,EAAC,oBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAoEH;;GApHuBuB,S;UACNjC,U,EAEEK,Q;;;MAHI4B,S;AAsHxBA,SAAS,CAACoB,SAAV,GAAsB;AAClBnB,EAAAA,QAAQ,EAAEjC,SAAS,CAACqD,IAAV,CAAeC;AADP,CAAtB","sourcesContent":["import React from \"react\";\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Link,\r\n    Box,\r\n    InputAdornment,\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { HashRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\r\nimport { Post } from \"./../apis/api-controller\";\r\nimport Auth from './../auth/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\n\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    loginButton: {\r\n        backgroundColor: green[700],\r\n        color: them.palette.primary.contrastText,\r\n        marginTop: them.spacing(4),\r\n        marginBottom: them.spacing(4),\r\n        \"&:hover\": {\r\n            backgroundColor: green[600],\r\n            color: them.palette.primary.contrastText,\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: green[700],\r\n            color: them.palette.primary.contrastText,\r\n        },\r\n    },\r\n    MainTitle: {\r\n        color: green[700],\r\n        [them.breakpoints.down('sm')]: {\r\n            fontSize: 24\r\n        }\r\n    },\r\n}));\r\n\r\nasync function GetDeviceId() {\r\n    const fpPromise = FingerprintJS.load()\r\n    const fp = await fpPromise\r\n    const result = await fp.get()\r\n\r\n    // This is the visitor identifier:\r\n    const deviceId = result.visitorId\r\n    console.log(deviceId);\r\n    return deviceId;\r\n\r\n}\r\n\r\nexport default function LoginPage({ setToken }) {\r\n    let history = useHistory();\r\n\r\n    const classes = useStyle();\r\n\r\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n\r\n\r\n    const submitLoginDetails = async (event) => {\r\n        console.log(\"the email entered is: \", email);\r\n        console.log(\"the password entered is: \", password);\r\n\r\n        const deviceId = await GetDeviceId();\r\n\r\n        var response = await Post('/login', {\r\n            Email: email,\r\n            Password: password,\r\n            DeviceID: deviceId\r\n        });\r\n\r\n        if (response) {\r\n            console.log(\"setting token: \", response);\r\n            setToken(response.data);\r\n        }\r\n        // if (response) {\r\n        //     console.log(\"the access token is: \", response.data.access_token);\r\n\r\n        //     response = response.data;\r\n\r\n        //     // var jsonResponse = await response.JSON()\r\n\r\n        //     // response = response.data;\r\n        //     // console.log(\"the response data is \", response);\r\n\r\n        //     if (response && response.access_token) {\r\n        //         console.log(\"login authenticated!!!\");\r\n        //         Auth.authenticate();\r\n        //         history.push('/home-page');\r\n\r\n        //     }\r\n        // }\r\n        // else {\r\n        //     console.log(\"reponse was null\");\r\n        // }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container>\r\n                <Grid\r\n                    container\r\n                    justifyContent=\"center\"\r\n                    alignContent=\"center\"\r\n                    className={classes.root}\r\n                >\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                            Log In to TruVest\r\n                        </Typography>\r\n                        <Typography>\r\n                            New Here?  <Link href=\"/#sign-up\"> Create an account</Link>\r\n                        </Typography>\r\n                        <Box my={4} mb={2}>\r\n                            <TextField\r\n                                value={email}\r\n                                onInput={e => setEmailInput(e.target.value)}\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                className={classes.InputFieldsText}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AlternateEmailIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                fullWidth={true}\r\n                            />\r\n                            <TextField\r\n                                value={password}\r\n                                onInput={e => setPasswordInput(e.target.value)}\r\n                                placeholder=\"Password\"\r\n                                margin=\"normal\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LockIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                fullWidth\r\n                            />\r\n                            <FormControl>\r\n                                <FormControlLabel\r\n                                    label={<Typography>Keep me logged in</Typography>}\r\n                                    control={<Checkbox style={{ color: green[700] }} />}\r\n                                />\r\n                            </FormControl>\r\n                            <Button onClick={() => submitLoginDetails()} fullWidth className={classes.loginButton} variant=\"contained\">\r\n                                Login\r\n                            </Button>\r\n                            <Typography>\r\n                                <Link href=\"/#forgot-password\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Forgot Password?</Link>\r\n                            </Typography>\r\n\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nLoginPage.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}