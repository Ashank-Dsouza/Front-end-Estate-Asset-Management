{"ast":null,"code":"var _jsxFileName = \"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, Box, Link, TextField, InputAdornment, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { green } from '@material-ui/core/colors';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(them => ({\n  Container: {\n    padding: `${them.spacing(4)}px 0px`,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    maxHeight: 600\n  },\n  InputFields: {\n    marginTop: them.spacing(8),\n    marginBottom: them.spacing(8),\n    width: \"100%\"\n  },\n  InputFieldsText: {\n    marginBottom: them.spacing(4),\n    maxWidth: 600,\n    display: 'block',\n    color: `${green[700]} !important`,\n    '&:hover': {\n      color: green[700]\n    },\n    '&:active': {\n      color: green[700],\n      borderColor: green[700]\n    }\n  },\n  CheckboxControler: {\n    color: green[700]\n  },\n  Button: {\n    display: 'block',\n    color: 'white',\n    backgroundColor: green[700],\n    '&:hover': {\n      backgroundColor: green[900]\n    }\n  }\n}));\nexport function SignUpButtonClick() {\n  console.log(\"a click has been Registered in SignUpButtonClick\");\n}\n_c = SignUpButtonClick;\nexport default function SingUp() {\n  _s();\n\n  const classes = useStyle();\n\n  const preventDefault = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.updateInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false); // return (\n  //     <>\n  //         <Box className={classes.Container}>\n  //             <Container maxWidth=\"md\">\n  //                 <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\n  //                 <Typography>\n  //                     Already have an account?{\" \"}\n  //                     <Link href=\"/login\" >\n  //                         Login\n  //                     </Link>\n  //                 </Typography>\n  //                 <Box className={classes.InputFields}>\n  //                     <TextField\n  //                         label=\"UserName\"\n  //                         variant=\"outlined\"\n  //                         className={classes.InputFieldsText}\n  //                         InputProps={{\n  //                             startAdornment: (\n  //                                 <InputAdornment position=\"start\">\n  //                                     <AccountCircleIcon />\n  //                                 </InputAdornment>\n  //                             ),\n  //                         }}\n  //                         fullWidth={true}\n  //                     />\n  //                     <TextField\n  //                         label=\"Email\"\n  //                         variant=\"outlined\"\n  //                         className={classes.InputFieldsText}\n  //                         InputProps={{\n  //                             startAdornment: (\n  //                                 <InputAdornment position=\"start\">\n  //                                     <AlternateEmailIcon />\n  //                                 </InputAdornment>\n  //                             ),\n  //                         }}\n  //                         fullWidth={true}\n  //                     />\n  //                     <TextField\n  //                         label=\"Password\"\n  //                         variant=\"outlined\"\n  //                         type='password'\n  //                         className={classes.InputFieldsText}\n  //                         InputProps={{\n  //                             startAdornment: (\n  //                                 <InputAdornment position=\"start\">\n  //                                     <LockOpenIcon />\n  //                                 </InputAdornment>\n  //                             ),\n  //                         }}\n  //                         fullWidth={true}\n  //                     />\n  //                     <FormControlLabel\n  //                         control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\n  //                         label=\"I agree to the terms and conditions\"\n  //                     />\n  //                     <Button onClick={() => {SignUpButtonClick()}} variant='contained' className={classes.Button}>Get Started</Button>\n  //                 </Box>\n  //                 <Typography>\n  //                     Â© 2021 All Rights Reserved. CORK is a product of Designreset.\n  //                     <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\n  //                     <Link style={{ color: green[700] }}> Terms</Link>.\n  //                 </Typography>\n  //             </Container>\n  //         </Box>\n  //     </>\n  // );\n}\n\n_s(SingUp, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c2 = SingUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpButtonClick\");\n$RefreshReg$(_c2, \"SingUp\");","map":{"version":3,"sources":["/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js"],"names":["React","Container","Box","Link","TextField","InputAdornment","FormControlLabel","Checkbox","Button","makeStyles","Typography","green","AccountCircleIcon","AlternateEmailIcon","LockOpenIcon","useStyle","them","padding","spacing","display","justifyContent","alignItems","height","maxHeight","InputFields","marginTop","marginBottom","width","InputFieldsText","maxWidth","color","borderColor","CheckboxControler","backgroundColor","SignUpButtonClick","console","log","SingUp","classes","preventDefault","event","updateInput","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Container,\r\n    Box,\r\n    Link,\r\n    TextField,\r\n    InputAdornment,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    Container: {\r\n        padding: `${them.spacing(4)}px 0px`,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        maxHeight: 600\r\n    },\r\n    InputFields: {\r\n        marginTop: them.spacing(8),\r\n        marginBottom: them.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    InputFieldsText: {\r\n        marginBottom: them.spacing(4),\r\n        maxWidth: 600,\r\n        display: 'block',\r\n        color: `${green[700]} !important`,\r\n        '&:hover': {\r\n            color: green[700],\r\n        },\r\n        '&:active': {\r\n            color: green[700],\r\n            borderColor: green[700],\r\n        }\r\n    },\r\n    CheckboxControler: {\r\n        color: green[700],\r\n    },\r\n    Button: {\r\n        display: 'block',\r\n        color: 'white',\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        }\r\n    }\r\n}));\r\n\r\nexport function SignUpButtonClick(){\r\n    console.log(\"a click has been Registered in SignUpButtonClick\");\r\n}\r\n\r\n\r\n\r\nexport default function SingUp() {\r\n    const classes = useStyle();\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return ( <>\r\n    <div>\r\n    <input type=\"text\" onChange={this.updateInput}></input>\r\n    <input type=\"submit\" onClick={this.handleSubmit} ></input>\r\n    </div>\r\n</>);\r\n\r\n\r\n    // return (\r\n    //     <>\r\n    //         <Box className={classes.Container}>\r\n    //             <Container maxWidth=\"md\">\r\n    //                 <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\r\n    //                 <Typography>\r\n    //                     Already have an account?{\" \"}\r\n    //                     <Link href=\"/login\" >\r\n    //                         Login\r\n    //                     </Link>\r\n    //                 </Typography>\r\n    //                 <Box className={classes.InputFields}>\r\n    //                     <TextField\r\n    //                         label=\"UserName\"\r\n    //                         variant=\"outlined\"\r\n    //                         className={classes.InputFieldsText}\r\n    //                         InputProps={{\r\n    //                             startAdornment: (\r\n    //                                 <InputAdornment position=\"start\">\r\n    //                                     <AccountCircleIcon />\r\n    //                                 </InputAdornment>\r\n    //                             ),\r\n    //                         }}\r\n    //                         fullWidth={true}\r\n    //                     />\r\n    //                     <TextField\r\n    //                         label=\"Email\"\r\n    //                         variant=\"outlined\"\r\n    //                         className={classes.InputFieldsText}\r\n    //                         InputProps={{\r\n    //                             startAdornment: (\r\n    //                                 <InputAdornment position=\"start\">\r\n    //                                     <AlternateEmailIcon />\r\n    //                                 </InputAdornment>\r\n    //                             ),\r\n    //                         }}\r\n    //                         fullWidth={true}\r\n    //                     />\r\n    //                     <TextField\r\n    //                         label=\"Password\"\r\n    //                         variant=\"outlined\"\r\n    //                         type='password'\r\n    //                         className={classes.InputFieldsText}\r\n    //                         InputProps={{\r\n    //                             startAdornment: (\r\n    //                                 <InputAdornment position=\"start\">\r\n    //                                     <LockOpenIcon />\r\n    //                                 </InputAdornment>\r\n    //                             ),\r\n    //                         }}\r\n    //                         fullWidth={true}\r\n    //                     />\r\n    //                     <FormControlLabel\r\n    //                         control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\r\n    //                         label=\"I agree to the terms and conditions\"\r\n    //                     />\r\n    //                     <Button onClick={() => {SignUpButtonClick()}} variant='contained' className={classes.Button}>Get Started</Button>\r\n    //                 </Box>\r\n    //                 <Typography>\r\n    //                     Â© 2021 All Rights Reserved. CORK is a product of Designreset.\r\n    //                     <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\r\n    //                     <Link style={{ color: green[700] }}> Terms</Link>.\r\n    //                 </Typography>\r\n    //             </Container>\r\n    //         </Box>\r\n    //     </>\r\n    // );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}