[{"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js":"1","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js":"2","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js":"3","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js":"4","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js":"5","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js":"6","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js":"7","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js":"8"},{"size":289,"mtime":1625822028000,"results":"9","hashOfConfig":"10"},{"size":2374,"mtime":1628578466473,"results":"11","hashOfConfig":"10"},{"size":10611,"mtime":1626334754000,"results":"12","hashOfConfig":"10"},{"size":8326,"mtime":1628232294596,"results":"13","hashOfConfig":"10"},{"size":6221,"mtime":1628232532922,"results":"14","hashOfConfig":"10"},{"size":865,"mtime":1628163668470,"results":"15","hashOfConfig":"10"},{"size":3641,"mtime":1628574594027,"results":"16","hashOfConfig":"10"},{"size":5591,"mtime":1628579491120,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1t3zmzs",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js",[],["37","38"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js",["39","40","41","42"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js",["43","44","45","46","47"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n    Container,\r\n    Box,\r\n    Link,\r\n    TextField,\r\n    InputAdornment,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\nimport { HashRouter as Router, Route, NavLink , Switch} from 'react-router-dom';\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    Container: {\r\n        padding: `${them.spacing(4)}px 0px`,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        maxHeight: 600\r\n    },\r\n    InputFields: {\r\n        marginTop: them.spacing(8),\r\n        marginBottom: them.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    InputFieldsText: {\r\n        marginBottom: them.spacing(4),\r\n        maxWidth: 600,\r\n        display: 'block',\r\n        color: `${green[700]} !important`,\r\n        '&:hover': {\r\n            color: green[700],\r\n        },\r\n        '&:active': {\r\n            color: green[700],\r\n            borderColor: green[700],\r\n        }\r\n    },\r\n    CheckboxControler: {\r\n        color: green[700],\r\n    },\r\n    Button: {\r\n        display: 'block',\r\n        color: 'white',\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function SingUp() {\r\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\r\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\r\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\r\n\r\n\r\n\r\n    const classes = useStyle();\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const submitOnClick = (event) => {\r\n        console.log(\"the submitOnClick\");\r\n        console.log(\"the value of firstname input is: \", firstname);\r\n        console.log(\"the value of lastname input is: \", lastname);\r\n        console.log(\"the value of password input is: \", password);\r\n        console.log(\"the value of email input is: \", email);\r\n        console.log(\"the value of username input is: \", username);\r\n\r\n        axios.defaults.baseURL = 'http://localhost:9191';\r\n        //axios.get('/data/2.5/weather')\r\n\r\n        axios.post('/signup', {\r\n            FirstName: firstname,\r\n            LastName: lastname,\r\n            UserName: username,\r\n            Email: email,\r\n            Password: password\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.Container}>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\r\n                    <Typography>\r\n                        Already have an account?{\" \"}\r\n                        <NavLink exact to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Login</NavLink>\r\n\r\n\r\n                    </Typography>\r\n                    <Box className={classes.InputFields}>\r\n                        <TextField\r\n                            value={firstname}\r\n                            onInput={e => setFirstNameInput(e.target.value)}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={lastname}\r\n                            onInput={e => setSecondNameInput(e.target.value)}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n\r\n\r\n\r\n                        <TextField\r\n                            value={username}\r\n                            onInput={e => setUserNameInput(e.target.value)}\r\n                            label=\"UserName\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={email}\r\n                            onInput={e => setEmailInput(e.target.value)}\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AlternateEmailIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={password}\r\n                            onInput={e => setPasswordInput(e.target.value)}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type='password'\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOpenIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\r\n                            label=\"I agree to the terms and conditions\"\r\n                        />\r\n                        <Button onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\r\n                    </Box>\r\n                    <Typography>\r\n                        © 2021 All Rights Reserved. CORK is a product of Designreset.\r\n                        <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\r\n                        <Link style={{ color: green[700] }}> Terms</Link>.\r\n                    </Typography>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js",["48","49","50","51"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Link,\r\n    Box,\r\n    InputAdornment,\r\n    Button,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { HashRouter as Router, Route, NavLink , Switch} from 'react-router-dom';\r\n\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\n\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    loginButton: {\r\n        backgroundColor: green[700],\r\n        color: them.palette.primary.contrastText,\r\n        marginTop: them.spacing(4),\r\n        marginBottom: them.spacing(4),\r\n        \"&:hover\": {\r\n            backgroundColor: green[600],\r\n            color: them.palette.primary.contrastText,\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: green[700],\r\n            color: them.palette.primary.contrastText,\r\n        },\r\n    },\r\n    MainTitle: {\r\n        color: green[700],\r\n        [them.breakpoints.down('sm')]: {\r\n            fontSize: 24\r\n        }\r\n    },\r\n}));\r\n\r\nasync function GetDeviceId() {\r\n    const fpPromise = FingerprintJS.load()\r\n    const fp = await fpPromise\r\n    const result = await fp.get()\r\n\r\n    // This is the visitor identifier:\r\n    const deviceId = result.visitorId\r\n    console.log(deviceId);\r\n    return deviceId;\r\n\r\n}\r\n\r\nexport default function LoginPage(props) {\r\n    const classes = useStyle();\r\n\r\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n\r\n\r\n    const submitLoginDetails = async (event) => {\r\n        console.log(\"the email entered is: \", email);\r\n        console.log(\"the password entered is: \", password);\r\n\r\n        const deviceId = await GetDeviceId();\r\n\r\n        axios.defaults.baseURL = 'http://localhost:9191';\r\n        //axios.get('/data/2.5/weather')\r\n\r\n        axios.post('/login', {\r\n            Email: email,\r\n            Password: password,\r\n            DeviceID: deviceId\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container>\r\n                <Grid\r\n                    container\r\n                    justifyContent=\"center\"\r\n                    alignContent=\"center\"\r\n                    className={classes.root}\r\n                >\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                            Log In to CORK\r\n                        </Typography>\r\n                        <Typography>\r\n                            New Here? <Link href=\"#\"> Create an account</Link>\r\n                        </Typography>\r\n                        <Box my={4} mb={2}>\r\n                            <TextField\r\n                                value={email}\r\n                                onInput={e => setEmailInput(e.target.value)}\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                className={classes.InputFieldsText}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AlternateEmailIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                fullWidth={true}\r\n                            />\r\n                            <TextField\r\n                                value={password}\r\n                                onInput={e => setPasswordInput(e.target.value)}\r\n                                placeholder=\"Password\"\r\n                                margin=\"normal\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LockIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                fullWidth\r\n                            />\r\n                            <FormControl>\r\n                                <FormControlLabel\r\n                                    label={<Typography>Keep me logged in</Typography>}\r\n                                    control={<Checkbox style={{ color: green[700] }} />}\r\n                                />\r\n                            </FormControl>\r\n                            <Button onClick={() => submitLoginDetails()} fullWidth className={classes.loginButton} variant=\"contained\">\r\n                                Login\r\n                            </Button>\r\n                            <NavLink exact to=\"/forgot-password\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Forgot Password?</NavLink>\r\n\r\n                            {/* <Link>Forgot Password?</Link> */}\r\n                        </Box>\r\n                        <Typography>\r\n                            © 2021 All Rights Reserved. CORK is a product of Designreset.\r\n                            <Link style={{ color: green[700] }}>Cookie Preferences, Privacy</Link>, and\r\n                            <Link style={{ color: green[700] }}> Terms</Link>.\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js",["52"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":19},{"ruleId":"58","severity":1,"message":"62","line":3,"column":39,"nodeType":"60","messageId":"61","endLine":3,"endColumn":43},{"ruleId":"58","severity":1,"message":"63","line":3,"column":55,"nodeType":"60","messageId":"61","endLine":3,"endColumn":61},{"ruleId":"58","severity":1,"message":"64","line":18,"column":8,"nodeType":"60","messageId":"61","endLine":18,"endColumn":15},{"ruleId":"58","severity":1,"message":"65","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":21},{"ruleId":"58","severity":1,"message":"66","line":15,"column":24,"nodeType":"60","messageId":"61","endLine":15,"endColumn":30},{"ruleId":"58","severity":1,"message":"67","line":15,"column":32,"nodeType":"60","messageId":"61","endLine":15,"endColumn":37},{"ruleId":"58","severity":1,"message":"63","line":15,"column":49,"nodeType":"60","messageId":"61","endLine":15,"endColumn":55},{"ruleId":"58","severity":1,"message":"68","line":77,"column":11,"nodeType":"60","messageId":"61","endLine":77,"endColumn":25},{"ruleId":"58","severity":1,"message":"69","line":19,"column":8,"nodeType":"60","messageId":"61","endLine":19,"endColumn":25},{"ruleId":"58","severity":1,"message":"66","line":21,"column":24,"nodeType":"60","messageId":"61","endLine":21,"endColumn":30},{"ruleId":"58","severity":1,"message":"67","line":21,"column":32,"nodeType":"60","messageId":"61","endLine":21,"endColumn":37},{"ruleId":"58","severity":1,"message":"63","line":21,"column":49,"nodeType":"60","messageId":"61","endLine":21,"endColumn":55},{"ruleId":"58","severity":1,"message":"59","line":1,"column":15,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"70","line":11,"column":5,"nodeType":"60","messageId":"61","endLine":11,"endColumn":16},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Switch' is defined but never used.","'MapUser' is defined but never used.","'FingerprintJS' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'preventDefault' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation"]