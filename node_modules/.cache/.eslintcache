[{"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js":"1","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js":"2","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js":"3","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js":"4","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js":"5","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js":"6","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js":"7","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js":"8","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js":"9","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/Router.js":"10","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js":"11","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AccountSetting.js":"12","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/useToken.js":"13"},{"size":289,"mtime":1625822028000,"results":"14","hashOfConfig":"15"},{"size":2587,"mtime":1629464764685,"results":"16","hashOfConfig":"15"},{"size":10611,"mtime":1626334754000,"results":"17","hashOfConfig":"15"},{"size":8239,"mtime":1629437684663,"results":"18","hashOfConfig":"15"},{"size":6884,"mtime":1629467061369,"results":"19","hashOfConfig":"15"},{"size":865,"mtime":1628163668470,"results":"20","hashOfConfig":"15"},{"size":3178,"mtime":1629437318430,"results":"21","hashOfConfig":"15"},{"size":5087,"mtime":1629437307609,"results":"22","hashOfConfig":"15"},{"size":364,"mtime":1629457825204,"results":"23","hashOfConfig":"15"},{"size":642,"mtime":1629467748526,"results":"24","hashOfConfig":"15"},{"size":331,"mtime":1629467938163,"results":"25","hashOfConfig":"15"},{"size":18683,"mtime":1625909042000,"results":"26","hashOfConfig":"15"},{"size":584,"mtime":1629467915590,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1t3zmzs",{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js",[],["58","59"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js",["60","61","62","63","64","65"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js",["66","67","68","69","70","71","72"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Box,\r\n    Link,\r\n    TextField,\r\n    InputAdornment,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\nimport { HashRouter as Router, Route, NavLink , Switch} from 'react-router-dom';\r\nimport {Post} from \"./../apis/api-controller\";\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    Container: {\r\n        padding: `${them.spacing(4)}px 0px`,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        maxHeight: 600\r\n    },\r\n    InputFields: {\r\n        marginTop: them.spacing(8),\r\n        marginBottom: them.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    InputFieldsText: {\r\n        marginBottom: them.spacing(4),\r\n        maxWidth: 600,\r\n        display: 'block',\r\n        color: `${green[700]} !important`,\r\n        '&:hover': {\r\n            color: green[700],\r\n        },\r\n        '&:active': {\r\n            color: green[700],\r\n            borderColor: green[700],\r\n        }\r\n    },\r\n    CheckboxControler: {\r\n        color: green[700],\r\n    },\r\n    Button: {\r\n        display: 'block',\r\n        color: 'white',\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function SingUp() {\r\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\r\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\r\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\r\n\r\n    const [checkBoxValue, setCheckBoxInput] =  useState(false);\r\n    \r\n    const classes = useStyle();\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const submitOnClick =  async(event)  =>  {\r\n        console.log(\"the submitOnClick\");\r\n        console.log(\"the value of checkbox input is: \", checkBoxValue);\r\n        console.log(\"the value of firstname input is: \", firstname);\r\n        console.log(\"the value of lastname input is: \", lastname);\r\n        console.log(\"the value of password input is: \", password);\r\n        console.log(\"the value of email input is: \", email);\r\n        console.log(\"the value of username input is: \", username);\r\n\r\n        var response = await Post('/signup', {\r\n            FirstName: firstname,\r\n            LastName: lastname,\r\n            UserName: username,\r\n            Email: email,\r\n            Password: password\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\r\n                    <Typography>\r\n                        Already have an account?{\" \"}\r\n                        <NavLink exact to=\"/#sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Login</NavLink>\r\n\r\n\r\n                    </Typography>\r\n                    <Box className={classes.InputFields}>\r\n                        <TextField\r\n                            value={firstname}\r\n                            onInput={e => setFirstNameInput(e.target.value)}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={lastname}\r\n                            onInput={e => setSecondNameInput(e.target.value)}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n\r\n\r\n\r\n                        <TextField\r\n                            value={username}\r\n                            onInput={e => setUserNameInput(e.target.value)}\r\n                            label=\"UserName\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={email}\r\n                            onInput={e => setEmailInput(e.target.value)}\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AlternateEmailIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={password}\r\n                            onInput={e => setPasswordInput(e.target.value)}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type='password'\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOpenIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <FormControlLabel\r\n                            value = {checkBoxValue} \r\n                            onChange={e =>  {\r\n                                setCheckBoxInput(e.target.checked)\r\n                            }}\r\n                            control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\r\n                            label=\"I agree to the terms and conditions\"\r\n                        />\r\n                        <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\r\n                    </Box>\r\n                </Container>\r\n                </Container>\r\n        </>\r\n    );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js",["73","74","75","76","77","78","79","80","81"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js",["82"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js",["83","84"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n  Grid, Typography, InputAdornment,\r\n  Container, CssBaseline, Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Button,\r\n  TextField,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { Post } from \"./../apis/api-controller\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n  resetButton: {\r\n    backgroundColor: green[700],\r\n    color: them.palette.primary.contrastText,\r\n    marginTop: them.spacing(4),\r\n    marginBottom: them.spacing(4),\r\n    \"&:hover\": {\r\n      backgroundColor: green[600],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: green[700],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n  },\r\n  MainTitle: {\r\n    color: green[700],\r\n    [them.breakpoints.down(\"sm\")]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PasswordRecoverPage(props) {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n  const submitOnClick = async(event) => {\r\n    console.log(\"the value of email input is: \", email);\r\n    var response = await Post('/users/sendMail', {\r\n      Email: email\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <Grid item xs={12} md={8}>\r\n            <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n              <CardHeader\r\n                title={\r\n                  <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                    Password Recovery\r\n                  </Typography>\r\n                }\r\n                subheader=\"Enter your email and instructions will be sent to you!\"\r\n              />\r\n              <CardContent>\r\n                <TextField\r\n                  value={email}\r\n                  onInput={e => setEmailInput(e.target.value)}\r\n                  placeholder=\"Email\"\r\n                  margin=\"normal\"\r\n                  type='email'\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AlternateEmailIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  onClick={() => submitOnClick()}\r\n                  variant=\"contained\"\r\n                  className={classes.resetButton}\r\n                  fullWidth\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js",["85","86","87"],"import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Grid,\n    Typography,\n    InputAdornment,\n    Container,\n    CssBaseline,\n    Card,\n    CardContent,\n    CardHeader,\n    CardActions,\n    Button,\n    TextField,\n    Link,\n    Box\n} from \"@material-ui/core\";\nimport {Post} from \"./../apis/api-controller\";\n\n\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { green } from \"@material-ui/core/colors\";\n\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\n\nconst useStyle = makeStyles((them) => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    resetButton: {\n        backgroundColor: green[700],\n        color: them.palette.primary.contrastText,\n        marginTop: them.spacing(4),\n        marginBottom: them.spacing(4),\n        \"&:hover\": {\n            backgroundColor: green[600],\n            color: them.palette.primary.contrastText,\n        },\n        \"&:active\": {\n            backgroundColor: green[700],\n            color: them.palette.primary.contrastText,\n        },\n    },\n    MainTitle: {\n        color: green[700],\n        [them.breakpoints.down(\"sm\")]: {\n            fontSize: 24,\n        },\n    },\n}));\n\nexport default function PasswordResetPage(props) {\n    const classes = useStyle();\n\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n\n    const submitOnClick = async(event) => {\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of password input is: \", password);\n\n        var response = await Post('/users/forgotPassword', {\n            Email: email,\n            Password: password\n        })\n    }\n\n\n    return (\n        <>\n            <CssBaseline />\n            <Container>\n                <Grid\n                    container\n                    justifyContent=\"center\"\n                    alignContent=\"center\"\n                    className={classes.root}\n                >\n                    <Grid item xs={12} md={8}>\n                        <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\n                            <CardHeader\n                                title={\n                                    <Typography variant=\"h4\" className={classes.MainTitle}>\n                                        Password Reset\n                  </Typography>\n                                }\n                                subheader=\"Enter your email and instructions will be sent to you!\"\n                            />\n                            <Box className={classes.InputFields}>\n                                <TextField\n                                    value={email}\n                                    onInput={e => setEmailInput(e.target.value)}\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <AlternateEmailIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n\n                                <TextField\n                                    value={password}\n                                    onInput={e => setPasswordInput(e.target.value)}\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    type='password'\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <LockOpenIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n                            </Box>\n                            <CardActions>\n                                <Button\n                                    onClick={() => submitOnClick()}\n                                    variant=\"contained\"\n                                    className={classes.resetButton}\n                                    fullWidth\n                                >\n                                    Reset\n                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/Router.js",["88","89"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js",["90"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AccountSetting.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/useToken.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":3,"column":39,"nodeType":"97","messageId":"98","endLine":3,"endColumn":43},{"ruleId":"95","severity":1,"message":"100","line":3,"column":45,"nodeType":"97","messageId":"98","endLine":3,"endColumn":52},{"ruleId":"95","severity":1,"message":"101","line":3,"column":55,"nodeType":"97","messageId":"98","endLine":3,"endColumn":61},{"ruleId":"95","severity":1,"message":"102","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"103","line":19,"column":8,"nodeType":"97","messageId":"98","endLine":19,"endColumn":15},{"ruleId":"95","severity":1,"message":"99","line":6,"column":5,"nodeType":"97","messageId":"98","endLine":6,"endColumn":9},{"ruleId":"95","severity":1,"message":"104","line":14,"column":8,"nodeType":"97","messageId":"98","endLine":14,"endColumn":21},{"ruleId":"95","severity":1,"message":"105","line":15,"column":24,"nodeType":"97","messageId":"98","endLine":15,"endColumn":30},{"ruleId":"95","severity":1,"message":"106","line":15,"column":32,"nodeType":"97","messageId":"98","endLine":15,"endColumn":37},{"ruleId":"95","severity":1,"message":"101","line":15,"column":49,"nodeType":"97","messageId":"98","endLine":15,"endColumn":55},{"ruleId":"95","severity":1,"message":"107","line":78,"column":11,"nodeType":"97","messageId":"98","endLine":78,"endColumn":25},{"ruleId":"95","severity":1,"message":"108","line":91,"column":13,"nodeType":"97","messageId":"98","endLine":91,"endColumn":21},{"ruleId":"95","severity":1,"message":"109","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":13},{"ruleId":"95","severity":1,"message":"110","line":17,"column":18,"nodeType":"97","messageId":"98","endLine":17,"endColumn":28},{"ruleId":"95","severity":1,"message":"111","line":20,"column":8,"nodeType":"97","messageId":"98","endLine":20,"endColumn":25},{"ruleId":"95","severity":1,"message":"105","line":22,"column":24,"nodeType":"97","messageId":"98","endLine":22,"endColumn":30},{"ruleId":"95","severity":1,"message":"106","line":22,"column":32,"nodeType":"97","messageId":"98","endLine":22,"endColumn":37},{"ruleId":"95","severity":1,"message":"100","line":22,"column":39,"nodeType":"97","messageId":"98","endLine":22,"endColumn":46},{"ruleId":"95","severity":1,"message":"101","line":22,"column":48,"nodeType":"97","messageId":"98","endLine":22,"endColumn":54},{"ruleId":"95","severity":1,"message":"112","line":24,"column":8,"nodeType":"97","messageId":"98","endLine":24,"endColumn":12},{"ruleId":"95","severity":1,"message":"113","line":76,"column":9,"nodeType":"97","messageId":"98","endLine":76,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":1,"column":15,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":11,"column":3,"nodeType":"97","messageId":"98","endLine":11,"endColumn":7},{"ruleId":"95","severity":1,"message":"108","line":54,"column":9,"nodeType":"97","messageId":"98","endLine":54,"endColumn":17},{"ruleId":"95","severity":1,"message":"114","line":10,"column":5,"nodeType":"97","messageId":"98","endLine":10,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":15,"column":5,"nodeType":"97","messageId":"98","endLine":15,"endColumn":9},{"ruleId":"95","severity":1,"message":"108","line":67,"column":13,"nodeType":"97","messageId":"98","endLine":67,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"115","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"115","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":16},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'MapUser' is defined but never used.","'FingerprintJS' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'preventDefault' is assigned a value but never used.","'response' is assigned a value but never used.","'axios' is defined but never used.","'RouterLink' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Auth' is defined but never used.","'history' is assigned a value but never used.","'CardContent' is defined but never used.","'useToken' is defined but never used.","no-global-assign","no-unsafe-negation"]