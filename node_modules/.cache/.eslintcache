[{"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js":"1","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js":"2","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js":"3","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js":"4","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js":"5","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js":"6","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js":"7","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js":"8","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/UserProfile.js":"9","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/ReactPopup.js":"10","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js":"11","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/variables.js":"12","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/PrivateRoute.js":"13","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/utility/UrlBuilder.js":"14","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AddUser.js":"15","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js":"16"},{"size":289,"mtime":1625822028000,"results":"17","hashOfConfig":"18"},{"size":1428,"mtime":1630305559175,"results":"19","hashOfConfig":"18"},{"size":5060,"mtime":1630078947848,"results":"20","hashOfConfig":"18"},{"size":6780,"mtime":1630297619938,"results":"21","hashOfConfig":"18"},{"size":3169,"mtime":1630078947811,"results":"22","hashOfConfig":"18"},{"size":1009,"mtime":1630304020117,"results":"23","hashOfConfig":"18"},{"size":10611,"mtime":1626334754000,"results":"24","hashOfConfig":"18"},{"size":360,"mtime":1630093104207,"results":"25","hashOfConfig":"18"},{"size":3775,"mtime":1630297546956,"results":"26","hashOfConfig":"18"},{"size":5342,"mtime":1630091363303,"results":"27","hashOfConfig":"18"},{"size":1565,"mtime":1630092984578,"results":"28","hashOfConfig":"18"},{"size":188,"mtime":1630092430297,"results":"29","hashOfConfig":"18"},{"size":620,"mtime":1630092002418,"results":"30","hashOfConfig":"18"},{"size":102,"mtime":1630092639549,"results":"31","hashOfConfig":"18"},{"size":4550,"mtime":1630304668384,"results":"32","hashOfConfig":"18"},{"size":6368,"mtime":1630305464744,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13ht1c8",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js",[],["70","71"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js",["72","73"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js",["74"],"import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Grid,\n    Typography,\n    InputAdornment,\n    Container,\n    CssBaseline,\n    Card,\n    CardHeader,\n    CardActions,\n    Button,\n    TextField,\n    Box\n} from \"@material-ui/core\";\nimport {Post} from \"./../apis/api-controller\";\n\n\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { green } from \"@material-ui/core/colors\";\n\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\n\nconst useStyle = makeStyles((them) => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    resetButton: {\n        backgroundColor: green[700],\n        color: them.palette.primary.contrastText,\n        marginTop: them.spacing(4),\n        marginBottom: them.spacing(4),\n        \"&:hover\": {\n            backgroundColor: green[600],\n            color: them.palette.primary.contrastText,\n        },\n        \"&:active\": {\n            backgroundColor: green[700],\n            color: them.palette.primary.contrastText,\n        },\n    },\n    MainTitle: {\n        color: green[700],\n        [them.breakpoints.down(\"sm\")]: {\n            fontSize: 24,\n        },\n    },\n}));\n\nexport default function PasswordResetPage(props) {\n    const classes = useStyle();\n\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n\n    const submitOnClick = async(event) => {\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of password input is: \", password);\n\n        var response = await Post('/users/forgotPassword', {\n            Email: email,\n            Password: password\n        })\n    }\n\n\n    return (\n        <>\n            <CssBaseline />\n            <Container>\n                <Grid\n                    container\n                    justifyContent=\"center\"\n                    alignContent=\"center\"\n                    className={classes.root}\n                >\n                    <Grid item xs={12} md={8}>\n                        <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\n                            <CardHeader\n                                title={\n                                    <Typography variant=\"h4\" className={classes.MainTitle}>\n                                        Password Reset\n                  </Typography>\n                                }\n                                subheader=\"Enter your email and instructions will be sent to you!\"\n                            />\n                            <Box className={classes.InputFields}>\n                                <TextField\n                                    value={email}\n                                    onInput={e => setEmailInput(e.target.value)}\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <AlternateEmailIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n\n                                <TextField\n                                    value={password}\n                                    onInput={e => setPasswordInput(e.target.value)}\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    type='password'\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <LockOpenIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n                            </Box>\n                            <CardActions>\n                                <Button\n                                    onClick={() => submitOnClick()}\n                                    variant=\"contained\"\n                                    className={classes.resetButton}\n                                    fullWidth\n                                >\n                                    Reset\n                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js",["75"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n  Grid, Typography, InputAdornment,\r\n  Container, CssBaseline, Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Post } from \"./../apis/api-controller\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n  resetButton: {\r\n    backgroundColor: green[700],\r\n    color: them.palette.primary.contrastText,\r\n    marginTop: them.spacing(4),\r\n    marginBottom: them.spacing(4),\r\n    \"&:hover\": {\r\n      backgroundColor: green[600],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: green[700],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n  },\r\n  MainTitle: {\r\n    color: green[700],\r\n    [them.breakpoints.down(\"sm\")]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PasswordRecoverPage(props) {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n  const submitOnClick = async(event) => {\r\n    console.log(\"the value of email input is: \", email);\r\n    var response = await Post('/users/sendMail', {\r\n      Email: email\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <Grid item xs={12} md={8}>\r\n            <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n              <CardHeader\r\n                title={\r\n                  <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                    Password Recovery\r\n                  </Typography>\r\n                }\r\n                subheader=\"Enter your email and instructions will be sent to you!\"\r\n              />\r\n              <CardContent>\r\n                <TextField\r\n                  value={email}\r\n                  onInput={e => setEmailInput(e.target.value)}\r\n                  placeholder=\"Email\"\r\n                  margin=\"normal\"\r\n                  type='email'\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AlternateEmailIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  onClick={() => submitOnClick()}\r\n                  variant=\"contained\"\r\n                  className={classes.resetButton}\r\n                  fullWidth\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js",["76","77"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/UserProfile.js",["78"],"import { GetWithAuth, PutWithAuth } from \"../apis/api-controller\";\r\nimport ReactPopup from \"../components/ReactPopup\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Container,\r\n    CssBaseline,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\n\r\nclass UserProfile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            externalData: null,\r\n            redirectToReferrer: false,\r\n            name: 'Blank Name',\r\n            email: 'Blank Email'\r\n        }\r\n        this.setProfileInfo = this.setProfileInfo.bind(this)\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this._asyncRequest = GetWithAuth('/user/me')\r\n            .then((externalData) => {\r\n                this._asyncRequest = null;\r\n                const updatedName = externalData.data.firstname + \" \" + externalData.data.lastname;\r\n                const updatedEmail = externalData.data.email;\r\n                this.setProfileInfo(updatedName, updatedEmail);\r\n                this.setState({ externalData });\r\n                console.log(\"the reponse is: \", externalData);\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(\"the error is \", error);\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this._asyncRequest) {\r\n            this._asyncRequest.cancel();\r\n        }\r\n    }\r\n\r\n    setProfileInfo(updatedName, updatedEmail){\r\n        this.setState({name: updatedName})\r\n        this.setState({email: updatedEmail})\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        if (this.state.externalData === null) {\r\n            return (<> <p role='contentinfo'> Loading.... </p></>)\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <>\r\n                    <CssBaseline />\r\n                    <Container component={Box} my={4}>\r\n                        <Grid container justifyContent=\"space-between\" spacing={4}>\r\n                            <Grid item md={5} xs={12}>\r\n                                <Card>\r\n                                    <CardHeader\r\n                                        title={\r\n                                            <Typography variant=\"h4\" style={{ color: green[700] }}>\r\n                                                User Details\r\n                                            </Typography>\r\n                                        }\r\n                                        action={\r\n                                            <ReactPopup UserInfo={this.state.externalData.data}  onUpdateInfo={this.setProfileInfo}> </ReactPopup>\r\n                                        }\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography variant='h4'>{this.state.name}</Typography>\r\n                                        <List disablePadding>\r\n                                            <ListItem>\r\n                                                <ListItemIcon><MailOutlineIcon /></ListItemIcon>\r\n                                                <ListItemText style={{ color: green[700] }} primary={this.state.email} />\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default UserProfile;","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/ReactPopup.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/variables.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/PrivateRoute.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/utility/UrlBuilder.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AddUser.js",["79","80"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/forms/AddUserForm.js",["81","82","83","84","85","86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":11},{"ruleId":"97","severity":1,"message":"98","line":19,"column":3,"nodeType":"99","messageId":"100","endLine":21,"endColumn":4},{"ruleId":"93","severity":1,"message":"101","line":65,"column":13,"nodeType":"95","messageId":"96","endLine":65,"endColumn":21},{"ruleId":"93","severity":1,"message":"101","line":53,"column":9,"nodeType":"95","messageId":"96","endLine":53,"endColumn":17},{"ruleId":"93","severity":1,"message":"102","line":6,"column":24,"nodeType":"95","messageId":"96","endLine":6,"endColumn":30},{"ruleId":"93","severity":1,"message":"103","line":6,"column":32,"nodeType":"95","messageId":"96","endLine":6,"endColumn":37},{"ruleId":"93","severity":1,"message":"104","line":1,"column":23,"nodeType":"95","messageId":"96","endLine":1,"endColumn":34},{"ruleId":"93","severity":1,"message":"105","line":18,"column":12,"nodeType":"95","messageId":"96","endLine":18,"endColumn":18},{"ruleId":"93","severity":1,"message":"106","line":19,"column":11,"nodeType":"95","messageId":"96","endLine":19,"endColumn":23},{"ruleId":"93","severity":1,"message":"107","line":4,"column":5,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"108","line":11,"column":5,"nodeType":"95","messageId":"96","endLine":11,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":13,"column":24,"nodeType":"95","messageId":"96","endLine":13,"endColumn":30},{"ruleId":"93","severity":1,"message":"103","line":13,"column":32,"nodeType":"95","messageId":"96","endLine":13,"endColumn":37},{"ruleId":"93","severity":1,"message":"109","line":13,"column":39,"nodeType":"95","messageId":"96","endLine":13,"endColumn":46},{"ruleId":"93","severity":1,"message":"110","line":18,"column":10,"nodeType":"95","messageId":"96","endLine":18,"endColumn":20},{"ruleId":"93","severity":1,"message":"111","line":76,"column":11,"nodeType":"95","messageId":"96","endLine":76,"endColumn":25},{"ruleId":"93","severity":1,"message":"101","line":89,"column":13,"nodeType":"95","messageId":"96","endLine":89,"endColumn":21},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'response' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'PutWithAuth' is defined but never used.","'gender' is assigned a value but never used.","'selectGender' is assigned a value but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'NavLink' is defined but never used.","'Typography' is defined but never used.","'preventDefault' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]