[{"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js":"1","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js":"2","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js":"3","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js":"4","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js":"5","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js":"6","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js":"7","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js":"8","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js":"9","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/Router.js":"10","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js":"11","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AccountSetting.js":"12","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/UserProfile.js":"13","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/PopUpForm.js":"14","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/Modal.js":"15","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/TriggerButton.js":"16","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/Form.js":"17"},{"size":289,"mtime":1625822028000,"results":"18","hashOfConfig":"19"},{"size":1776,"mtime":1629975478722,"results":"20","hashOfConfig":"19"},{"size":10611,"mtime":1626334754000,"results":"21","hashOfConfig":"19"},{"size":8236,"mtime":1629707114486,"results":"22","hashOfConfig":"19"},{"size":6512,"mtime":1629975564698,"results":"23","hashOfConfig":"19"},{"size":865,"mtime":1628163668470,"results":"24","hashOfConfig":"19"},{"size":3178,"mtime":1629437318430,"results":"25","hashOfConfig":"19"},{"size":5087,"mtime":1629437307609,"results":"26","hashOfConfig":"19"},{"size":2191,"mtime":1629975216638,"results":"27","hashOfConfig":"19"},{"size":642,"mtime":1629467748526,"results":"28","hashOfConfig":"19"},{"size":461,"mtime":1629784754605,"results":"29","hashOfConfig":"19"},{"size":18683,"mtime":1625909042000,"results":"30","hashOfConfig":"19"},{"size":4997,"mtime":1629957355193,"results":"31","hashOfConfig":"19"},{"size":1425,"mtime":1629957631541,"results":"32","hashOfConfig":"19"},{"size":1221,"mtime":1629957631541,"results":"33","hashOfConfig":"19"},{"size":291,"mtime":1629957502589,"results":"34","hashOfConfig":"19"},{"size":697,"mtime":1629957617709,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1t3zmzs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/index.js",[],["76","77"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/App.js",["78"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/MapUser.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/singUpPage.js",["79","80","81","82","83","84","85"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Box,\r\n    Link,\r\n    TextField,\r\n    InputAdornment,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button,\r\n    CssBaseline\r\n} from \"@material-ui/core\";\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\r\nimport { HashRouter as Router, Route, NavLink , Switch} from 'react-router-dom';\r\nimport {Post} from \"./../apis/api-controller\";\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { green } from '@material-ui/core/colors';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n    Container: {\r\n        padding: `${them.spacing(4)}px 0px`,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        maxHeight: 600\r\n    },\r\n    InputFields: {\r\n        marginTop: them.spacing(8),\r\n        marginBottom: them.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    InputFieldsText: {\r\n        marginBottom: them.spacing(4),\r\n        maxWidth: 600,\r\n        display: 'block',\r\n        color: `${green[700]} !important`,\r\n        '&:hover': {\r\n            color: green[700],\r\n        },\r\n        '&:active': {\r\n            color: green[700],\r\n            borderColor: green[700],\r\n        }\r\n    },\r\n    CheckboxControler: {\r\n        color: green[700],\r\n    },\r\n    Button: {\r\n        display: 'block',\r\n        color: 'white',\r\n        backgroundColor: green[700],\r\n        '&:hover': {\r\n            backgroundColor: green[900],\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function SingUp() {\r\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\r\n    const [username, setUserNameInput] = useState(''); // '' is the initial state value\r\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n    const [firstname, setFirstNameInput] = useState(''); // '' is the initial state value\r\n    const [lastname, setSecondNameInput] = useState(''); // '' is the initial state value\r\n\r\n    const [checkBoxValue, setCheckBoxInput] =  useState(false);\r\n    \r\n    const classes = useStyle();\r\n\r\n    const preventDefault = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const submitOnClick =  async(event)  =>  {\r\n        console.log(\"the submitOnClick\");\r\n        console.log(\"the value of checkbox input is: \", checkBoxValue);\r\n        console.log(\"the value of firstname input is: \", firstname);\r\n        console.log(\"the value of lastname input is: \", lastname);\r\n        console.log(\"the value of password input is: \", password);\r\n        console.log(\"the value of email input is: \", email);\r\n        console.log(\"the value of username input is: \", username);\r\n\r\n        var response = await Post('/signup', {\r\n            FirstName: firstname,\r\n            LastName: lastname,\r\n            UserName: username,\r\n            Email: email,\r\n            Password: password\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h4\" style={{ color: green[700] }}>Get started with a free account</Typography>\r\n                    <Typography>\r\n                        Already have an account?{\" \"}\r\n                        <NavLink exact to=\"/login\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Login</NavLink>\r\n\r\n\r\n                    </Typography>\r\n                    <Box className={classes.InputFields}>\r\n                        <TextField\r\n                            value={firstname}\r\n                            onInput={e => setFirstNameInput(e.target.value)}\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={lastname}\r\n                            onInput={e => setSecondNameInput(e.target.value)}\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n\r\n\r\n\r\n                        <TextField\r\n                            value={username}\r\n                            onInput={e => setUserNameInput(e.target.value)}\r\n                            label=\"UserName\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AccountCircleIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={email}\r\n                            onInput={e => setEmailInput(e.target.value)}\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AlternateEmailIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <TextField\r\n                            value={password}\r\n                            onInput={e => setPasswordInput(e.target.value)}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type='password'\r\n                            className={classes.InputFieldsText}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOpenIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            fullWidth={true}\r\n                        />\r\n                        <FormControlLabel\r\n                            value = {checkBoxValue} \r\n                            onChange={e =>  {\r\n                                setCheckBoxInput(e.target.checked)\r\n                            }}\r\n                            control={<Checkbox color={green['A700']} className={classes.CheckboxControler} />}\r\n                            label=\"I agree to the terms and conditions\"\r\n                        />\r\n                        <Button disabled={!checkBoxValue} onClick={() => submitOnClick()} variant='contained' className={classes.Button}>Get Started</Button>\r\n                    </Box>\r\n                </Container>\r\n                </Container>\r\n        </>\r\n    );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/LoginPage.js",["86"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/ScratchPad.js",["87"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordRecoveryPage.js",["88","89"],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport {\r\n  Grid, Typography, InputAdornment,\r\n  Container, CssBaseline, Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Button,\r\n  TextField,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { Post } from \"./../apis/api-controller\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\n\r\nconst useStyle = makeStyles((them) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n  resetButton: {\r\n    backgroundColor: green[700],\r\n    color: them.palette.primary.contrastText,\r\n    marginTop: them.spacing(4),\r\n    marginBottom: them.spacing(4),\r\n    \"&:hover\": {\r\n      backgroundColor: green[600],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: green[700],\r\n      color: them.palette.primary.contrastText,\r\n    },\r\n  },\r\n  MainTitle: {\r\n    color: green[700],\r\n    [them.breakpoints.down(\"sm\")]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PasswordRecoverPage(props) {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmailInput] = useState(''); // '' is the initial state value\r\n\r\n  const submitOnClick = async(event) => {\r\n    console.log(\"the value of email input is: \", email);\r\n    var response = await Post('/users/sendMail', {\r\n      Email: email\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <Grid item xs={12} md={8}>\r\n            <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n              <CardHeader\r\n                title={\r\n                  <Typography variant=\"h4\" className={classes.MainTitle}>\r\n                    Password Recovery\r\n                  </Typography>\r\n                }\r\n                subheader=\"Enter your email and instructions will be sent to you!\"\r\n              />\r\n              <CardContent>\r\n                <TextField\r\n                  value={email}\r\n                  onInput={e => setEmailInput(e.target.value)}\r\n                  placeholder=\"Email\"\r\n                  margin=\"normal\"\r\n                  type='email'\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AlternateEmailIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  onClick={() => submitOnClick()}\r\n                  variant=\"contained\"\r\n                  className={classes.resetButton}\r\n                  fullWidth\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/PasswordReset.js",["90","91","92"],"import React from \"react\";\nimport { useState } from 'react';\nimport {\n    Grid,\n    Typography,\n    InputAdornment,\n    Container,\n    CssBaseline,\n    Card,\n    CardContent,\n    CardHeader,\n    CardActions,\n    Button,\n    TextField,\n    Link,\n    Box\n} from \"@material-ui/core\";\nimport {Post} from \"./../apis/api-controller\";\n\n\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { green } from \"@material-ui/core/colors\";\n\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\n\nconst useStyle = makeStyles((them) => ({\n    root: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    resetButton: {\n        backgroundColor: green[700],\n        color: them.palette.primary.contrastText,\n        marginTop: them.spacing(4),\n        marginBottom: them.spacing(4),\n        \"&:hover\": {\n            backgroundColor: green[600],\n            color: them.palette.primary.contrastText,\n        },\n        \"&:active\": {\n            backgroundColor: green[700],\n            color: them.palette.primary.contrastText,\n        },\n    },\n    MainTitle: {\n        color: green[700],\n        [them.breakpoints.down(\"sm\")]: {\n            fontSize: 24,\n        },\n    },\n}));\n\nexport default function PasswordResetPage(props) {\n    const classes = useStyle();\n\n    const [email, setEmailInput] = useState(''); // '' is the initial state value\n    const [password, setPasswordInput] = useState(''); // '' is the initial state value\n\n\n    const submitOnClick = async(event) => {\n        console.log(\"the value of email input is: \", email);\n        console.log(\"the value of password input is: \", password);\n\n        var response = await Post('/users/forgotPassword', {\n            Email: email,\n            Password: password\n        })\n    }\n\n\n    return (\n        <>\n            <CssBaseline />\n            <Container>\n                <Grid\n                    container\n                    justifyContent=\"center\"\n                    alignContent=\"center\"\n                    className={classes.root}\n                >\n                    <Grid item xs={12} md={8}>\n                        <Card style={{ backgroundColor: 'transparent', boxShadow: 'none' }}>\n                            <CardHeader\n                                title={\n                                    <Typography variant=\"h4\" className={classes.MainTitle}>\n                                        Password Reset\n                  </Typography>\n                                }\n                                subheader=\"Enter your email and instructions will be sent to you!\"\n                            />\n                            <Box className={classes.InputFields}>\n                                <TextField\n                                    value={email}\n                                    onInput={e => setEmailInput(e.target.value)}\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <AlternateEmailIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n\n                                <TextField\n                                    value={password}\n                                    onInput={e => setPasswordInput(e.target.value)}\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    type='password'\n                                    className={classes.InputFieldsText}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <LockOpenIcon />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    fullWidth={true}\n                                />\n                            </Box>\n                            <CardActions>\n                                <Button\n                                    onClick={() => submitOnClick()}\n                                    variant=\"contained\"\n                                    className={classes.resetButton}\n                                    fullWidth\n                                >\n                                    Reset\n                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/apis/api-controller.js",["93","94","95"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/Router.js",["96","97"],"import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport Auth from './../auth/Auth';\nimport useToken from './../auth/useToken';\n\nimport MapUser from \"./MapUser\";\n\nexport default function ProtectedRouter(props) {\n    return (\n        <>\n         <PrivateRoute  component={MapUser} />\n        </>\n        ) \n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\n    <Route\n    {...rest}\n\n        render={props =>\n            Auth.getAuth() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{ pathname: \"/\"}}/>\n            )\n        }\n    />\n);\n",["98","99"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/auth/Auth.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/AccountSetting.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/pages/UserProfile.js",["100","101","102","103","104","105","106"],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/PopUpForm.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/Modal.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/TriggerButton.js",[],"/Users/ashankdsouza/repos/Estate Asset Management/Front-end/src/components/Form.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":18,"column":3,"nodeType":"113","messageId":"114","endLine":20,"endColumn":4},{"ruleId":"115","severity":1,"message":"116","line":6,"column":5,"nodeType":"117","messageId":"118","endLine":6,"endColumn":9},{"ruleId":"115","severity":1,"message":"119","line":14,"column":8,"nodeType":"117","messageId":"118","endLine":14,"endColumn":21},{"ruleId":"115","severity":1,"message":"120","line":15,"column":24,"nodeType":"117","messageId":"118","endLine":15,"endColumn":30},{"ruleId":"115","severity":1,"message":"121","line":15,"column":32,"nodeType":"117","messageId":"118","endLine":15,"endColumn":37},{"ruleId":"115","severity":1,"message":"122","line":15,"column":49,"nodeType":"117","messageId":"118","endLine":15,"endColumn":55},{"ruleId":"115","severity":1,"message":"123","line":78,"column":11,"nodeType":"117","messageId":"118","endLine":78,"endColumn":25},{"ruleId":"115","severity":1,"message":"124","line":91,"column":13,"nodeType":"117","messageId":"118","endLine":91,"endColumn":21},{"ruleId":"115","severity":1,"message":"125","line":21,"column":8,"nodeType":"117","messageId":"118","endLine":21,"endColumn":12},{"ruleId":"115","severity":1,"message":"126","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":11,"column":3,"nodeType":"117","messageId":"118","endLine":11,"endColumn":7},{"ruleId":"115","severity":1,"message":"124","line":54,"column":9,"nodeType":"117","messageId":"118","endLine":54,"endColumn":17},{"ruleId":"115","severity":1,"message":"127","line":10,"column":5,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":15,"column":5,"nodeType":"117","messageId":"118","endLine":15,"endColumn":9},{"ruleId":"115","severity":1,"message":"124","line":67,"column":13,"nodeType":"117","messageId":"118","endLine":67,"endColumn":21},{"ruleId":"115","severity":1,"message":"128","line":44,"column":11,"nodeType":"117","messageId":"118","endLine":44,"endColumn":17},{"ruleId":"115","severity":1,"message":"129","line":62,"column":11,"nodeType":"117","messageId":"118","endLine":62,"endColumn":18},{"ruleId":"115","severity":1,"message":"128","line":66,"column":11,"nodeType":"117","messageId":"118","endLine":66,"endColumn":17},{"ruleId":"115","severity":1,"message":"126","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"130","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":45,"column":17,"nodeType":"135","messageId":"136","endLine":45,"endColumn":27},{"ruleId":"115","severity":1,"message":"137","line":46,"column":23,"nodeType":"117","messageId":"118","endLine":46,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":47,"column":17,"nodeType":"135","messageId":"136","endLine":47,"endColumn":27},{"ruleId":"115","severity":1,"message":"138","line":48,"column":23,"nodeType":"117","messageId":"118","endLine":48,"endColumn":35},{"ruleId":"115","severity":1,"message":"139","line":65,"column":15,"nodeType":"117","messageId":"118","endLine":65,"endColumn":24},{"ruleId":"115","severity":1,"message":"140","line":66,"column":15,"nodeType":"117","messageId":"118","endLine":66,"endColumn":23},{"ruleId":"115","severity":1,"message":"141","line":67,"column":15,"nodeType":"117","messageId":"118","endLine":67,"endColumn":20},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'FingerprintJS' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'preventDefault' is assigned a value but never used.","'response' is assigned a value but never used.","'Auth' is defined but never used.","'Component' is defined but never used.","'CardContent' is defined but never used.","'config' is assigned a value but never used.","'headers' is assigned a value but never used.","'useToken' is defined but never used.",["142"],["143"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'updatedName' is assigned a value but never used.","'updatedEmail' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]